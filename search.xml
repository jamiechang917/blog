<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MPI Tutorial 1</title>
    <url>/blog/2021/03/22/MPITutorial01/</url>
    <content><![CDATA[<h2 id="MPI-Tutorial-1-Hello-MPI-World"><a href="#MPI-Tutorial-1-Hello-MPI-World" class="headerlink" title="MPI Tutorial 1 - Hello MPI World!"></a>MPI Tutorial 1 - Hello MPI World!</h2><h3 id="What-is-MPI"><a href="#What-is-MPI" class="headerlink" title="What is MPI?"></a>What is MPI?</h3><h3 id="Example-Hello-MPI-World"><a href="#Example-Hello-MPI-World" class="headerlink" title="Example - Hello MPI World!"></a>Example - Hello MPI World!</h3><div class="note info modern"><p>這個範例將演示如何初始化MPI，以及MPI的一些基本參數。</p>
</div>
<p>Hello_MPI_World.c<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mpi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> agrc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    MPI_Init(<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> size, rank;</span><br><span class="line">    MPI_Comm_size(MPI_COMM_WORLD, &amp;size);</span><br><span class="line">    MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello world from rank %d, the world size is %d.\n&quot;</span>,rank,size);</span><br><span class="line">    MPI_Finalize();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>執行<code>mpicc -O3 ./Hello_MPI_World.c</code>編譯，接著執行<code>mpirun -np &lt;處理器數量&gt; &lt;編譯完的檔案&gt;</code>。</p>
<p>以我的執行結果為例<code>mpirun -np 8 ./a.out</code>，我使用8個處理器。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hello world from rank 5, the world size is 8.</span><br><span class="line">Hello world from rank 7, the world size is 8.</span><br><span class="line">Hello world from rank 4, the world size is 8.</span><br><span class="line">Hello world from rank 2, the world size is 8.</span><br><span class="line">Hello world from rank 6, the world size is 8.</span><br><span class="line">Hello world from rank 3, the world size is 8.</span><br><span class="line">Hello world from rank 0, the world size is 8.</span><br><span class="line">Hello world from rank 1, the world size is 8.</span><br></pre></td></tr></table></figure><br>從結果你能看到，代碼中只有一行<code>printf</code>，但是卻輸出八行字串，這是因為在MPI程式中，每個處理器都會執行一遍<code>main()</code>，所以你會看到八行Hello world。</p>
<div class="note danger modern"><p>注意MPI在執行上面的範例時並沒有照著處理器的編號依序執行，而是並行執行，因此輸出並不會按照順序，而是誰先執行誰就先輸出。如果你再執行一遍，你會發現輸出的順序不一樣。</p>
</div>
<p>仔細看一下Hello_MPI_World.c，除了開頭要<code>#include &lt;mpi.h&gt;</code>，還有四個重要的函式，一般寫MPI程式基本跑不掉這四個函式。</p>
<h4 id="MPI-Init"><a href="#MPI-Init" class="headerlink" title="MPI_Init()"></a>MPI_Init()</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">MPI_Init(</span><br><span class="line">    <span class="keyword">int</span>* argc,</span><br><span class="line">    <span class="keyword">char</span>** argv)</span><br></pre></td></tr></table></figure>
<p><code>MPI_Init()</code> 用來初始化MPI的全域和局部變數，基本上它的兩個arguments不是很重要。</p>
<h4 id="MPI-Comm-size"><a href="#MPI-Comm-size" class="headerlink" title="MPI_Comm_size()"></a>MPI_Comm_size()</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">MPI_Comm_size(</span><br><span class="line">    MPI_Comm communicator,</span><br><span class="line">    <span class="keyword">int</span>* size)</span><br></pre></td></tr></table></figure>
<p><code>MPI_Comm_size()</code>會回傳一個整數，代表程式使用的處理器數量，範例中使用的<code>MPI_COMM_WORLD</code>包含所有能用的處理器，如果我們給它8個處理器，<code>MPI_Comm_size(MPI_COMM_WORLD, &amp;size)</code>將會回傳8並存到size變數裡。</p>
<h4 id="MPI-Comm-rank"><a href="#MPI-Comm-rank" class="headerlink" title="MPI_Comm_rank()"></a>MPI_Comm_rank()</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">MPI_Comm_rank(</span><br><span class="line">    MPI_Comm communicator,</span><br><span class="line">    <span class="keyword">int</span>* rank)</span><br></pre></td></tr></table></figure>
<p><code>MPI_Comm_rank()</code>會回傳該處理器的編號，即rank，從0開始。如同之前說的每個處理器都會執行一次<code>main()</code>，但是不同的是處理器的rank都不一樣，有了rank我們就能用來分配工作給指定的處理器。</p>
<h4 id="MPI-Finalize"><a href="#MPI-Finalize" class="headerlink" title="MPI_Finalize()"></a>MPI_Finalize()</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">MPI_Finalize()</span><br></pre></td></tr></table></figure>
<p><code>MPI_Finalize()</code>會放在程式的結尾，用來清除MPI環境，執行後就不能再使用任何MPI函式。</p>
<div class="note info modern"><p>:mega: 值得注意的是，MPI裡的函式會是變數都是MPI_開頭，且函式後面接的第一個字母是大寫，其餘小寫。另外MPI的變數都是大寫。</p>
</div>]]></content>
      <categories>
        <category>MPI</category>
      </categories>
      <tags>
        <tag>parallel programming</tag>
        <tag>MPI</tag>
      </tags>
  </entry>
  <entry>
    <title>MPI Tutorial 2</title>
    <url>/blog/2021/03/23/MPITutorial02/</url>
    <content><![CDATA[<h2 id="MPI-Tutorial-2-P2P-Communication"><a href="#MPI-Tutorial-2-P2P-Communication" class="headerlink" title="MPI Tutorial 2 - P2P Communication"></a>MPI Tutorial 2 - P2P Communication</h2><h3 id="P2P-Communication"><a href="#P2P-Communication" class="headerlink" title="P2P Communication"></a>P2P Communication</h3><p>點對點通訊在平行程式中相當重要，由於每個處理器會獨立執行<code>main()</code>，定義的變數也是獨立的，若要將變數的值或是資料傳送給其他處理器，就會用到通訊的函式。<br><div class="note info modern"><p>這個章節會介紹MPI_Send()及MPI_Recv()的應用</p>
</div></p>
<h3 id="Example-Ring-Program"><a href="#Example-Ring-Program" class="headerlink" title="Example - Ring Program"></a>Example - Ring Program</h3><p>ring.c<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mpi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> agrc, <span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    MPI_Init(<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> size, rank;</span><br><span class="line">    MPI_Comm_size(MPI_COMM_WORLD, &amp;size);</span><br><span class="line">    MPI_Comm_rank(MPI_COMM_WORLD, &amp;rank);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (rank == <span class="number">0</span>) &#123;</span><br><span class="line">        value = <span class="number">2021</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Rank: %d, Value: %d\n&quot;</span>,rank,value);</span><br><span class="line">    MPI_Barrier(MPI_COMM_WORLD);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (rank != <span class="number">0</span>)&#123; <span class="comment">//All process should be ready for receiving the value first. Otherwise some process will send initial value to another one, instead of new value.</span></span><br><span class="line">        MPI_Recv(&amp;value,<span class="number">1</span>,MPI_FLOAT,rank<span class="number">-1</span>,<span class="number">0</span>,MPI_COMM_WORLD,MPI_STATUS_IGNORE);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Rank %d received the value from %d\n&quot;</span>,rank,rank<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (rank == <span class="number">0</span>)&#123;</span><br><span class="line">        MPI_Send(&amp;value,<span class="number">1</span>,MPI_FLOAT,rank+<span class="number">1</span>,<span class="number">0</span>,MPI_COMM_WORLD);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Rank %d sent the value to %d\n&quot;</span>,rank,rank+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(rank != size<span class="number">-1</span>)&#123;</span><br><span class="line">        MPI_Send(&amp;value,<span class="number">1</span>,MPI_FLOAT,rank+<span class="number">1</span>,<span class="number">0</span>,MPI_COMM_WORLD);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Rank %d sent the value to %d\n&quot;</span>,rank,rank+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    MPI_Barrier(MPI_COMM_WORLD);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Program is end. Rank: %d, Value: %d\n&quot;</span>,rank,value);</span><br><span class="line">    MPI_Finalize();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>使用8個處理器的執行結果<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Rank: 1, Value: 0</span><br><span class="line">Rank: 3, Value: 0</span><br><span class="line">Rank: 6, Value: 0</span><br><span class="line">Rank: 4, Value: 0</span><br><span class="line">Rank: 5, Value: 0</span><br><span class="line">Rank: 7, Value: 0</span><br><span class="line">Rank: 2, Value: 0</span><br><span class="line">Rank: 0, Value: 2021</span><br><span class="line">Rank 0 sent the value to 1</span><br><span class="line">Rank 1 received the value from 0</span><br><span class="line">Rank 1 sent the value to 2</span><br><span class="line">Rank 2 received the value from 1</span><br><span class="line">Rank 2 sent the value to 3</span><br><span class="line">Rank 3 received the value from 2</span><br><span class="line">Rank 3 sent the value to 4</span><br><span class="line">Rank 4 received the value from 3</span><br><span class="line">Rank 4 sent the value to 5</span><br><span class="line">Rank 5 received the value from 4</span><br><span class="line">Rank 5 sent the value to 6</span><br><span class="line">Rank 6 received the value from 5</span><br><span class="line">Rank 6 sent the value to 7</span><br><span class="line">Rank 7 received the value from 6</span><br><span class="line">Program is end. Rank: 0, Value: 2021</span><br><span class="line">Program is end. Rank: 1, Value: 2021</span><br><span class="line">Program is end. Rank: 2, Value: 2021</span><br><span class="line">Program is end. Rank: 3, Value: 2021</span><br><span class="line">Program is end. Rank: 4, Value: 2021</span><br><span class="line">Program is end. Rank: 5, Value: 2021</span><br><span class="line">Program is end. Rank: 6, Value: 2021</span><br><span class="line">Program is end. Rank: 7, Value: 2021</span><br></pre></td></tr></table></figure><br>這個<code>ring.c</code>的範例主要是將 rank 0 的 <code>value</code> 變數依序傳遞給其餘的處理器，在開頭我們宣告 <code>int value = 0</code>，唯獨 rank 0 的 <code>value</code> 是 2021，宣告完後會先 print 每個 rank 各自的 <code>value</code>。</p>
<p>接著你會看到<code>MPI_Barrier(MPI_COMM_WORLD)</code>，這個函式會等待所有的處理器處理完才繼續執行後面的工作，為平行運算中的同步化。</p>
<p>最後每個處理器會使用<code>MPI_Recv()</code>來接收來自<code>rank-1</code>的資料，並存入<code>value</code>變數。如果沒有接收到資料，處理器會閒置直到接受資料為止。接著 rank 0 會發送自己<code>value</code>的值給 rank 1，然後 rank 1 會接收其值並存入自己的<code>value</code>變數，以此推類直到最後一個處理器。</p>
<h4 id="MPI-Send"><a href="#MPI-Send" class="headerlink" title="MPI_Send()"></a>MPI_Send()</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">MPI_Send(</span><br><span class="line">    <span class="keyword">void</span>* data,</span><br><span class="line">    <span class="keyword">int</span> count,</span><br><span class="line">    MPI_Datatype datatype,</span><br><span class="line">    <span class="keyword">int</span> destination,</span><br><span class="line">    <span class="keyword">int</span> tag,</span><br><span class="line">    MPI_Comm communicator)</span><br></pre></td></tr></table></figure>
<p>第一個參數放要傳送的資料的記憶體位址，第二第三分別放傳送的資料數量及類型，<code>destination</code>是目標的 rank，<code>tag</code>可以是任意的正整數，用來標記。</p>
<h4 id="MPI-Recv"><a href="#MPI-Recv" class="headerlink" title="MPI_Recv()"></a>MPI_Recv()</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">MPI_Recv(</span><br><span class="line">    <span class="keyword">void</span>* data,</span><br><span class="line">    <span class="keyword">int</span> count,</span><br><span class="line">    MPI_Datatype datatype,</span><br><span class="line">    <span class="keyword">int</span> source,</span><br><span class="line">    <span class="keyword">int</span> tag,</span><br><span class="line">    MPI_Comm communicator,</span><br><span class="line">    MPI_Status* status)</span><br></pre></td></tr></table></figure>
<p>與<code>MPI_Send()</code>類似，第一個參數放要存入的變數記憶體位址，唯一需要注意的是<code>MPI_Recv()</code>需要知道接收到的資料大小和類型。</p>
<h4 id="MPI-Barrier"><a href="#MPI-Barrier" class="headerlink" title="MPI_Barrier()"></a>MPI_Barrier()</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">MPI_Barrier(MPI_Comm communicator)</span><br></pre></td></tr></table></figure>
<p>同步化所有的進程，等待所有處理器處理完分配的工作後，才會繼續執行後續的程序。<br><div class="note warning modern"><p>在範例中我們先執行<code>MPI_Recv</code>而不是<code>MPI_Send</code>，是為了避免 rank 0 外的處理器在得到上一個處理器傳送的<code>value</code>前先行傳送自己的<code>value</code>，這樣會導致 rank 0 的<code>value</code>無法依序傳遞到最後一個處理器。</p>
</div></p>
]]></content>
      <categories>
        <category>MPI</category>
      </categories>
      <tags>
        <tag>parallel programming</tag>
        <tag>MPI</tag>
      </tags>
  </entry>
  <entry>
    <title>觀星日誌01</title>
    <url>/blog/2021/03/25/StarDiary01/</url>
    <content><![CDATA[<h1 id="觀星日誌-1"><a href="#觀星日誌-1" class="headerlink" title="觀星日誌 #1"></a>觀星日誌 #1</h1><div class="note info modern"><ul>
<li>日期：2021/03/20(六) - 2021/03/21(日)</li>
<li>時間：18:00 - 06:00</li>
<li>月相：0.40</li>
<li>天氣：陰轉晴</li>
<li>地點：清境觀星園</li>
</ul>
</div>
<h2 id="觀測概況"><a href="#觀測概況" class="headerlink" title="觀測概況"></a>觀測概況</h2><p>這次是我第一次在清境觀星，以往都是在鳶峰或昆陽看。在觀星園雖說受清境光害影響較大，但是有床還有提供早餐確實不錯，比在停車場看還要舒服不少。</p>
<p><img src="https://i.imgur.com/OQiRzMO.jpg" alt=""></p>
<p>這次上山基本上是天文社夜衝，總共有12個人參加，主要目標是完成梅西耶星表，還剩36個吧。早上在清大集合後就分成三車上山，我的午餐是在清水服務區吃的，吃完就直接去觀星園了。到達後各位就開始架儀，我這次是帶星野赤道儀加上 Canon 6D ，這台 6D 是我在去年11月底收的二手改機，但是一直沒有使用，所以這次也是它的開光日。</p>
<p><img src="https://i.imgur.com/HDvwTjH.jpg" alt=""></p>
<p>社上的 EM200 及 WO 132 FLT ，基本上梅西耶就靠它了。同時觀星園還有私人圓頂。</p>
<p><img src="https://i.imgur.com/uh4y8Ft.jpg" alt=""></p>
<p>晚上7點大家一起去吃魯媽媽，差點因為沒訂位吃不到，不過距離很近走路一下就到了。</p>
<p><img src="https://i.imgur.com/fr4la6I.jpg" alt=""></p>
<p><img src="https://i.imgur.com/zE3r06j.jpg" alt=""></p>
<p><img src="https://i.imgur.com/Cgv9ZDw.jpg" alt=""></p>
<p>當晚透明度很差，不過最近幾天霧霾相當嚴重，只不過居然連高山都被影響到，要說它是雲也不是，整晚都沒結露。上半夜基本上有很多中高雲，下半夜後才逐漸開天，不過上半夜受月光影響所以其實還好。此外，下半夜開始拍的梅西耶還算順利，總共拍了25個，半個晚上就完成四分之一也蠻不錯的。補充一下，當晚剛好遇到春分，也是觀測梅西耶天體的最佳時機，一晚能看到全部的梅西耶天體，因此當晚也有人在舉辦梅西耶馬拉松。</p>
<p><img src="https://i.imgur.com/CLGJdyN.jpg" alt=""></p>
<p>在下半夜拍的銀河原片，老實說受清境光害影響頗大(霧霾散射地面燈光加劇影響)，實測 SQM 約在20-21，盼望暗空公園的發展能降低未來民宿晚上的光害。</p>
<p><img src="https://i.imgur.com/YuokwEp.jpg" alt=""></p>
<p>清晨的天空，雲又出來了。</p>
<p><img src="https://i.imgur.com/kA91bR1.jpg" alt=""></p>
<p>離開前的最後一眼。</p>
<p><img src="https://i.imgur.com/LgJUMkk.jpg" alt=""></p>
<h2 id="觀測目標"><a href="#觀測目標" class="headerlink" title="觀測目標"></a>觀測目標</h2><ul>
<li>William Optics 132 FLT 折射鏡</li>
<li>Canon 60Da</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">目標</th>
<th style="text-align:center">濾鏡</th>
<th style="text-align:center">曝光時間 (s)</th>
<th style="text-align:center">張數</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">M3</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M4</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M5</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M6</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M9</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M10</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M14</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M18</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M19</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M21</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M23</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M24</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M25</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M53</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M56</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M62</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M71</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M80</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M92</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">M102</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">180</td>
<td style="text-align:center">3</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>Canon 6D (Mod)</li>
<li>Canon 28-80mm F2.8-4 L</li>
<li>IOptron SkyTracker Pro</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">目標</th>
<th style="text-align:center">濾鏡</th>
<th style="text-align:center">曝光時間 (s)</th>
<th style="text-align:center">ISO</th>
<th style="text-align:center">焦距 (mm)</th>
<th style="text-align:center">光圈</th>
<th style="text-align:center">張數</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">銀河系廣域</td>
<td style="text-align:center">No Filter</td>
<td style="text-align:center">120</td>
<td style="text-align:center">1600</td>
<td style="text-align:center">28</td>
<td style="text-align:center">4.0</td>
<td style="text-align:center">10</td>
</tr>
</tbody>
</table>
</div>
<h2 id="觀測成果"><a href="#觀測成果" class="headerlink" title="觀測成果"></a>觀測成果</h2><p><img src="https://i.imgur.com/2brlW4A.jpg" alt=""></p>
<h2 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h2><h3 id="Canon-6D-Mod-在用-28-80mm鏡頭的長焦段會反射內部IR光"><a href="#Canon-6D-Mod-在用-28-80mm鏡頭的長焦段會反射內部IR光" class="headerlink" title="Canon 6D (Mod) 在用 28-80mm鏡頭的長焦段會反射內部IR光"></a>Canon 6D (Mod) 在用 28-80mm鏡頭的長焦段會反射內部IR光</h3><p><img src="https://i.imgur.com/kBTHYtS.jpg" alt=""></p>
<p>第一次看到嚇死我了，紅紅一條。</p>
<p><img src="https://i.imgur.com/x6FhxtK.jpg" alt=""></p>
<p>這個是Dark，已經蓋住觀景窗和機身了，證明是受到內部發出的光源影響。</p>
<p>Canon會發光! 這問題真的是一個頭兩個大，疑似是開了Live View拍會把內部的紅外線燈弄到感光元件上，沒錯，內部友會發出紅外線的元件，目前還沒解決，下次再試試。下面有幾個論壇上相關的文章</p>
<p><a href="https://www.cloudynights.com/topic/691280-astro-modified-6d-light-leak/">https://www.cloudynights.com/topic/691280-astro-modified-6d-light-leak/</a><br><a href="https://www.cloudynights.com/topic/466027-filter-mod-eos-6d-extraneous-signal-in-live-view/">https://www.cloudynights.com/topic/466027-filter-mod-eos-6d-extraneous-signal-in-live-view/</a><br><a href="https://www.cloudynights.com/topic/545012-weird-bloom-problem-canon-6d-and-astronomik-uvir-clip-filter/">https://www.cloudynights.com/topic/545012-weird-bloom-problem-canon-6d-and-astronomik-uvir-clip-filter/</a></p>
<h2 id="待辦事項"><a href="#待辦事項" class="headerlink" title="待辦事項"></a>待辦事項</h2><ul>
<li>解決相機內部紅外線光源問題</li>
</ul>
]]></content>
      <categories>
        <category>astronomy</category>
      </categories>
      <tags>
        <tag>astrophotography</tag>
        <tag>observation</tag>
      </tags>
  </entry>
  <entry>
    <title>觀星日誌02</title>
    <url>/blog/2021/03/27/StarDiary02/</url>
    <content><![CDATA[<h1 id="觀星日誌-2"><a href="#觀星日誌-2" class="headerlink" title="觀星日誌 #2"></a>觀星日誌 #2</h1><div class="note info modern"><ul>
<li>日期：2021/03/24(三) - 2021/03/25(四)</li>
<li>時間：22:00 - 07:30</li>
<li>月相：0.79</li>
<li>天氣：局部偶雲轉晴</li>
<li>地點：清大天文台</li>
</ul>
</div>
<h2 id="觀測概況"><a href="#觀測概況" class="headerlink" title="觀測概況"></a>觀測概況</h2><p>我是看到今天天氣預報說下半夜會轉晴才決定前往天文台過夜的，沒意外這次是我第一次使用清大天文台新加裝的攝影設備，拍攝時除了遇到濾鏡盤連接不良以及自動對焦的小狀況外，大致上都很順利，同時也有兩位同是天文台解說員的同學一同參與觀測。天亮時趕緊拍平場，拍得還不錯，拍完後就是漫長的暗電流，最後拍偏壓檔收尾。</p>
<p><img src="https://i.imgur.com/vuCbb9U.jpg" alt=""></p>
<p><img src="https://i.imgur.com/zHYXLOz.jpg" alt=""></p>
<p><img src="https://i.imgur.com/vT2ME6p.jpg" alt=""></p>
<h2 id="觀測目標"><a href="#觀測目標" class="headerlink" title="觀測目標"></a>觀測目標</h2><p>本次為了完成梅西耶星表拍攝數個梅西耶天體，這次是第一次開始製作梅西耶星表，預計拍攝110個天體。</p>
<ul>
<li>25cm F12 折射鏡</li>
<li>ASI 6200MM Pro @ 0°C</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">目標</th>
<th style="text-align:center">濾鏡</th>
<th style="text-align:center">曝光時間 (s)</th>
<th style="text-align:center">張數</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">M3</td>
<td style="text-align:center">L,R,G,B</td>
<td style="text-align:center">20,60,60,60</td>
<td style="text-align:center">1,1,1,1</td>
</tr>
<tr>
<td style="text-align:center">M5</td>
<td style="text-align:center">L,R,G,B</td>
<td style="text-align:center">20,60,60,60</td>
<td style="text-align:center">1,1,1,1</td>
</tr>
<tr>
<td style="text-align:center">M13</td>
<td style="text-align:center">L,R,G,B</td>
<td style="text-align:center">20,60,60,60</td>
<td style="text-align:center">1,1,1,1</td>
</tr>
<tr>
<td style="text-align:center"><font color="#f00">M20</font></td>
<td style="text-align:center">Ha,OIII</td>
<td style="text-align:center">300,300</td>
<td style="text-align:center">8,8</td>
</tr>
<tr>
<td style="text-align:center">M53</td>
<td style="text-align:center">L,R,G,B</td>
<td style="text-align:center">20,60,60,60</td>
<td style="text-align:center">1,1,1,1</td>
</tr>
<tr>
<td style="text-align:center">M83</td>
<td style="text-align:center">L,R,G,B</td>
<td style="text-align:center">20,60,60,60</td>
<td style="text-align:center">1,1,1,1</td>
</tr>
<tr>
<td style="text-align:center">M84&amp;M86</td>
<td style="text-align:center">L,R,G,B</td>
<td style="text-align:center">20,60,60,60</td>
<td style="text-align:center">?,?,?,?</td>
</tr>
<tr>
<td style="text-align:center">M87</td>
<td style="text-align:center">L,R,G,B</td>
<td style="text-align:center">20,60,60,60</td>
<td style="text-align:center">?,?,?,?</td>
</tr>
<tr>
<td style="text-align:center">M90</td>
<td style="text-align:center">L,R,G,B</td>
<td style="text-align:center">20,60,60,60</td>
<td style="text-align:center">1,1,1,1</td>
</tr>
</tbody>
</table>
</div>
<p>其中 M20 為重點觀測目標，希望未來能補上更多資料。</p>
<h2 id="觀測成果"><a href="#觀測成果" class="headerlink" title="觀測成果"></a>觀測成果</h2><p>處理中</p>
<h2 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h2><h3 id="濾鏡盤接觸不良"><a href="#濾鏡盤接觸不良" class="headerlink" title="濾鏡盤接觸不良"></a>濾鏡盤接觸不良</h3><p>電腦端常常反覆發出裝置斷線和連線的警示音，後期發現濾鏡盤連接不上，最後是將濾鏡盤訊號線從相機上的 USB 孔移至 USB Hub 上就沒這問題了</p>
<h3 id="自動對焦找不到"><a href="#自動對焦找不到" class="headerlink" title="自動對焦找不到"></a>自動對焦找不到</h3><p>一開始用 MaxImDL 一直找不到對焦點，最後用 NINA 解決</p>
<h3 id="Gain開到437"><a href="#Gain開到437" class="headerlink" title="Gain開到437"></a>Gain開到437</h3><p>$%*#@!，太高了</p>
<h2 id="待辦事項"><a href="#待辦事項" class="headerlink" title="待辦事項"></a>待辦事項</h2><ul>
<li>將NINA中的濾鏡後綴從數字編號改成濾鏡名稱</li>
<li>嘗試將NINA連接星圖，得知該拍攝目標 </li>
<li>蚊子好多</li>
</ul>
]]></content>
      <categories>
        <category>astronomy</category>
      </categories>
      <tags>
        <tag>astrophotography</tag>
        <tag>observation</tag>
      </tags>
  </entry>
  <entry>
    <title>觀星日誌04</title>
    <url>/blog/2021/04/21/StarDiary04/</url>
    <content><![CDATA[<h1 id="觀星日誌-4"><a href="#觀星日誌-4" class="headerlink" title="觀星日誌 #4"></a>觀星日誌 #4</h1><div class="note info modern"><ul>
<li>日期：2021/04/20(二) - 2021/04/21(三)</li>
<li>時間：20:00 - 07:00</li>
<li>月相：0.54</li>
<li>天氣：晴</li>
<li>地點：清大天文台</li>
</ul>
</div>
<h2 id="觀測概況"><a href="#觀測概況" class="headerlink" title="觀測概況"></a>觀測概況</h2><p>自從在上禮拜的觀測時間裡不斷嘗試後，這次就非常順手，所有設置很快就處理好了。而成功用NINA自動對焦。我發現每個濾鏡的焦點比我想的差距還要大。下面是我量到的各個濾鏡的對焦點。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">濾鏡</th>
<th style="text-align:center">對焦器位置</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">L</td>
<td style="text-align:center">55493</td>
</tr>
<tr>
<td style="text-align:center">R</td>
<td style="text-align:center">46133</td>
</tr>
<tr>
<td style="text-align:center">G</td>
<td style="text-align:center">35899</td>
</tr>
<tr>
<td style="text-align:center">B</td>
<td style="text-align:center">65531</td>
</tr>
<tr>
<td style="text-align:center">Ha</td>
<td style="text-align:center">38744</td>
</tr>
<tr>
<td style="text-align:center">OIII</td>
<td style="text-align:center">51000</td>
</tr>
<tr>
<td style="text-align:center">SII</td>
<td style="text-align:center">56805</td>
</tr>
</tbody>
</table>
</div>
<p>量測時間：21:00, 溫度：28.94度</p>
<p>此外，未來的曝光策略應該會固定，<strong>LRGB(Gain:110, Offset:50) &amp; HSO(Gain:200, Offset:50)</strong>。</p>
<p>這次觀測相當順利，沒有遇到任何問題。<br><img src="https://i.imgur.com/x8ygh2K.jpg" alt=""></p>
<p>清晨還出現一些怪雲(<del>差點毀了平場</del>)，頂樓還能同時看海跟日出=U=<br><img src="https://i.imgur.com/brYPPAT.jpg" alt=""></p>
<p><img src="https://i.imgur.com/GmaHIX7.jpg" alt=""></p>
<p><img src="https://i.imgur.com/tAmbQZr.jpg" alt=""></p>
<p><img src="https://i.imgur.com/7aiVzaR.jpg" alt=""></p>
<h2 id="觀測目標"><a href="#觀測目標" class="headerlink" title="觀測目標"></a>觀測目標</h2><p>本次目標為上弦月,M3,M16,及M101</p>
<ul>
<li>25cm F12 折射鏡</li>
<li>ASI 6200MM Pro @ 0°C</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">目標</th>
<th style="text-align:center">濾鏡</th>
<th style="text-align:center">曝光時間 (s)</th>
<th style="text-align:center">張數</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">上弦月</td>
<td style="text-align:center">L,R,G,B,Ha,OIII,SII</td>
<td style="text-align:center">錄影</td>
<td style="text-align:center">100</td>
</tr>
<tr>
<td style="text-align:center">M3</td>
<td style="text-align:center">L,R,G,B</td>
<td style="text-align:center">180</td>
<td style="text-align:center">5,5,5,5</td>
</tr>
<tr>
<td style="text-align:center">M16</td>
<td style="text-align:center">Ha,OIII,SII</td>
<td style="text-align:center">300</td>
<td style="text-align:center">10,10,10</td>
</tr>
<tr>
<td style="text-align:center">M101</td>
<td style="text-align:center">L,R,G,B</td>
<td style="text-align:center">300</td>
<td style="text-align:center">3,3,3,3</td>
</tr>
</tbody>
</table>
</div>
<p>M101未來還需要補更多曝光，窄頻M16的效果很好。</p>
<h2 id="觀測成果"><a href="#觀測成果" class="headerlink" title="觀測成果"></a>觀測成果</h2><p><strong><em>Mineral Moon</em></strong><br><img src="https://i.imgur.com/d15wFs7.jpg" alt=""></p>
<p>待處理</p>
<h2 id="補充事項"><a href="#補充事項" class="headerlink" title="補充事項"></a>補充事項</h2><h3 id="平場建議拍攝順序-清晨"><a href="#平場建議拍攝順序-清晨" class="headerlink" title="平場建議拍攝順序(清晨)"></a>平場建議拍攝順序(清晨)</h3><p>這次透過曝光仔細檢查平場的拍攝順序。</p>
<p><strong>L&gt;B&gt;G&gt;R-&gt;OIII-&gt;SII-&gt;Ha</strong></p>
<p>R=172<br>G=132<br>B=57<br>Ha=1352<br>OIII=698<br>SII=1094</p>
<p><img src="https://i.imgur.com/bqGCYqM.jpg" alt=""></p>
<h2 id="待辦事項"><a href="#待辦事項" class="headerlink" title="待辦事項"></a>待辦事項</h2><ul>
<li>為M101,M16取得更多曝光</li>
</ul>
]]></content>
      <categories>
        <category>astronomy</category>
      </categories>
      <tags>
        <tag>astrophotography</tag>
        <tag>observation</tag>
      </tags>
  </entry>
  <entry>
    <title>觀星日誌03</title>
    <url>/blog/2021/04/14/StarDiary03/</url>
    <content><![CDATA[<h1 id="觀星日誌-3"><a href="#觀星日誌-3" class="headerlink" title="觀星日誌 #3"></a>觀星日誌 #3</h1><div class="note info modern"><ul>
<li>日期：2021/04/12(一) - 2021/04/13(二)</li>
<li>時間：23:00 - 07:00</li>
<li>月相：0.01</li>
<li>天氣：晴，清晨薄霧</li>
<li>地點：清大天文台</li>
</ul>
</div>
<h2 id="觀測概況"><a href="#觀測概況" class="headerlink" title="觀測概況"></a>觀測概況</h2><p>逢朔的晴天，正好是觀星好機會。今晚目標預計是M20，但是大部分的時間都在處理相機曝光參數，花很久時間才找到合適的參數。</p>
<p><img src="https://i.imgur.com/nPa5yv0.jpg" alt=""></p>
<p>清晨的日出，平地似乎有些薄霧</p>
<p><img src="https://i.imgur.com/xx1lETy.jpg" alt=""><br><img src="https://i.imgur.com/OJ7lFXv.jpg" alt=""></p>
<h2 id="觀測目標"><a href="#觀測目標" class="headerlink" title="觀測目標"></a>觀測目標</h2><p>本次目標為M20</p>
<ul>
<li>25cm F12 折射鏡</li>
<li>ASI 6200MM Pro @ 0°C</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">目標</th>
<th style="text-align:center">濾鏡</th>
<th style="text-align:center">曝光時間 (s)</th>
<th style="text-align:center">張數</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">M20</td>
<td style="text-align:center">L,R,G,B,Ha</td>
<td style="text-align:center">300</td>
<td style="text-align:center">3,3,3,3,3</td>
</tr>
</tbody>
</table>
</div>
<h2 id="觀測成果"><a href="#觀測成果" class="headerlink" title="觀測成果"></a>觀測成果</h2><p><strong><em>M20</em></strong><br><img src="https://i.imgur.com/eVp8onC.jpg" alt=""></p>
<p>這次是測試曝光參數，星點當時刻意過曝，因此都是死白的。</p>
<h2 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h2><h3 id="NINA連接ASI-6200MM持續報錯"><a href="#NINA連接ASI-6200MM持續報錯" class="headerlink" title="NINA連接ASI 6200MM持續報錯"></a>NINA連接ASI 6200MM持續報錯</h3><p>原因未知，但先用Maxim DL連接成功後再開啟NINA即可順利連結，然後再切斷Maxim DL的連接就好。</p>
<h3 id="在Maxim-DL下無法使用自動對焦"><a href="#在Maxim-DL下無法使用自動對焦" class="headerlink" title="在Maxim DL下無法使用自動對焦"></a>在Maxim DL下無法使用自動對焦</h3><p>在NINA下可以，但是NINA下選擇Airy Autofocuser無法連接，顯示驅動報錯。ㄏ選擇Device Hub Focuser則能順利連線，而且與Airy Focuser Drive顯示內容同步。</p>
<p><img src="https://i.imgur.com/twl1D9V.png" alt=""></p>
<p>NINA的AF似乎不允許Focuser的位置是負的，但是如果對焦點在負的位置的話，需要使用右下角Move來移動Focuser到負的位置，按下Set Position就可以將該點設為0。此外，在NINA的AF中，屢次發生AF下Focuser轉到位置0後停下，持續曝光檢測星點而不再尋找下一個對焦點(看曲線可以看到預測的對焦點在負的位置)，推測原因跟前者有關，所以應該只要將0點重新往後移就行。</p>
<p><img src="https://i.imgur.com/HNzVMju.png" alt=""></p>
<p>參考資料：<a href="https://www.youtube.com/watch?v=KouZlHmyScA">使用Maxim DL 手動對焦</a></p>
<h3 id="星點過曝，但是星雲主體尚需更長曝光時間"><a href="#星點過曝，但是星雲主體尚需更長曝光時間" class="headerlink" title="星點過曝，但是星雲主體尚需更長曝光時間"></a>星點過曝，但是星雲主體尚需更長曝光時間</h3><p>由於使用F12的主鏡，因此視野亮度相當暗，目前使用300s曝光，gain 110，在LRGB濾鏡上天體的訊號不強。下圖是L的原圖。</p>
<p><img src="https://i.imgur.com/bXuNYzZ.jpg" alt=""></p>
<p>下次可以試試Gain~200, Offset~50</p>
<p>參考資料：<a href="https://www.cloudynights.com/topic/684860-determining-dslr-exposure-blown-out-stars-vs-faint-details/">曝光策略選擇</a></p>
<h2 id="補充事項"><a href="#補充事項" class="headerlink" title="補充事項"></a>補充事項</h2><h3 id="平場建議拍攝順序-清晨"><a href="#平場建議拍攝順序-清晨" class="headerlink" title="平場建議拍攝順序(清晨)"></a>平場建議拍攝順序(清晨)</h3><p><strong>L&gt;G&gt;B&gt;R-&gt;OIII-&gt;Ha-&gt;SII</strong><br><img src="https://i.imgur.com/bqGCYqM.jpg" alt=""></p>
<p>使用NINA內建的Flat Wizard就可以自動拍攝平場</p>
<p><img src="https://i.imgur.com/BaEWQOG.jpg" alt=""></p>
<p>拍平場一般選擇天頂附近的天區</p>
<p><img src="https://i.imgur.com/FnOuQye.jpg" alt=""></p>
<h2 id="待辦事項"><a href="#待辦事項" class="headerlink" title="待辦事項"></a>待辦事項</h2><ul>
<li>尋找合適的曝光參數 </li>
<li>新放的捕蚊燈沒用，蚊子太聰明了</li>
<li>檔案巨大，下次準備一個硬碟去裝資料</li>
</ul>
]]></content>
      <categories>
        <category>astronomy</category>
      </categories>
      <tags>
        <tag>astrophotography</tag>
        <tag>observation</tag>
      </tags>
  </entry>
  <entry>
    <title>天文用攜帶型天氣站</title>
    <url>/blog/2021/06/16/WeatherStationNodeMCU/</url>
    <content><![CDATA[<h1 id="天文用攜帶型天氣站"><a href="#天文用攜帶型天氣站" class="headerlink" title="天文用攜帶型天氣站"></a>天文用攜帶型天氣站</h1><div class="note info modern"><p>製作日期：2021/06/16 (三) ~ 2021/06/22 (二)</p>
</div>
<h2 id="基本介紹"><a href="#基本介紹" class="headerlink" title="基本介紹"></a>基本介紹</h2><p>對於天文觀測或是天文攝影，一個光害少的好地點是必須的。那麼我們要怎麼判斷一個地方的光害汙染程度呢，這時候科學家定義了新的標準，來衡量天空背景亮度的強度。而目前業餘常見的測量儀器是加拿大公司  Unihedron 出的Sky Quality Meter。</p>
<p><img src="https://i.imgur.com/VjFPIFK.jpg" alt=""></p>
<p>這種手持式的儀器在業餘天文界算是常見，操作方式很簡單，僅需要對準天空，裡面的感測器就會測量光強度，並換算成SQM數值，夜空的數值一般介於 16~22 ，數字越大代表光害越小，可以用來對不同地方的光汙染進行比較。</p>
<p><img src="https://i.imgur.com/PgS3o6j.jpg" alt=""></p>
<p>此外，天文攝影很注重環境的溫溼度，相機在不同溫度下自然產生的熱雜訊的強度會不同，需要記錄環境溫度，後期才能根據該溫度拍攝對應的校正檔，來修正我們所得到的資料。而濕度可以很大程度的影響我們拍攝，當濕度過高時望遠鏡很容易結露，對鏡面和相機傷害較大，因此如果能觀測環境濕度也能幫助我們在濕度過高的情況下及時保護儀器。</p>
<p><img src="https://i.imgur.com/rl8W0K9.jpg" alt=""></p>
<p>但是但是，<strong>市面上同時結合SQM和溫溼度的商品非常昂貴(NT 5000+)</strong>，而且幾乎找不到，而這種看似不起眼的攜帶型天氣站卻對天文觀測非常重要，因此我打算做一個基於ESP32的天文用攜帶型天氣站，並利用ESP32的網路功能，結合第三方網站達到隨時用手機或電腦就能監控的功能，還能一併將數據紀錄起來。</p>
<p>以下材料是我這次有用到的，材料約一千出頭。</p>
<p><img src="https://i.imgur.com/KgHyoQ0.jpg" alt=""></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">品項</th>
<th style="text-align:center">價格</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">NodeMCU-32S 開發板</td>
<td style="text-align:center">360</td>
</tr>
<tr>
<td style="text-align:center">BME280 溫溼度氣壓感測器</td>
<td style="text-align:center">210</td>
</tr>
<tr>
<td style="text-align:center">TSL2591 環境光感測器</td>
<td style="text-align:center">290</td>
</tr>
<tr>
<td style="text-align:center">1.8吋 TFT螢幕</td>
<td style="text-align:center">210</td>
</tr>
</tbody>
</table>
</div>
<h3 id="開發板及感測器介紹"><a href="#開發板及感測器介紹" class="headerlink" title="開發板及感測器介紹"></a>開發板及感測器介紹</h3><h3 id="NodeMCU-32S"><a href="#NodeMCU-32S" class="headerlink" title="NodeMCU-32S"></a>NodeMCU-32S</h3><p>這次我購買的是AI-thinker的NodeMCU-32S v1.3，聽說相比其他的ESP32開發板，這款在Wifi連線方面十分穩定，不會出現斷線等問題。</p>
<p><img src="https://i.imgur.com/YqwfeQ1.jpg" alt=""></p>
<p><img src="https://i.imgur.com/JGxwGq4.jpg" alt=""></p>
<p><img src="https://i.imgur.com/G0NOTTR.jpg" alt=""></p>
<p><img src="https://i.imgur.com/Fgw00fL.png" alt=""></p>
<p><img src="https://i.imgur.com/zmneVfD.png" alt=""></p>
<p>NodeMCU-32S是基於ESP32並且內建Wifi及藍芽晶片的開發板，可以兼容Arduino的感測器及語法，各項功能也比Arduino Uno強，針腳高達38個，並且NodeMCU-32S的Vin支持5V輸出，可以用來推動3.3V推不動的裝置。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">Arduino Uno</th>
<th style="text-align:center">ESP8266</th>
<th style="text-align:center">ESP32</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">MCU</td>
<td style="text-align:center">ATMega328P</td>
<td style="text-align:center">Tensilica Xtensa Lx106</td>
<td style="text-align:center">Tensilica Xtensa LX6</td>
</tr>
<tr>
<td style="text-align:center">核心</td>
<td style="text-align:center">單核心 20MHz</td>
<td style="text-align:center">單核心 80/160MHz</td>
<td style="text-align:center">雙核心 160/240MHz</td>
</tr>
<tr>
<td style="text-align:center">SRAM</td>
<td style="text-align:center">16KB</td>
<td style="text-align:center">160KB</td>
<td style="text-align:center">512KB</td>
</tr>
<tr>
<td style="text-align:center">Flash空間</td>
<td style="text-align:center">32KB</td>
<td style="text-align:center">1-4MB</td>
<td style="text-align:center">4-32MB</td>
</tr>
<tr>
<td style="text-align:center">GPIO</td>
<td style="text-align:center">13</td>
<td style="text-align:center">8</td>
<td style="text-align:center">18</td>
</tr>
<tr>
<td style="text-align:center">ADC</td>
<td style="text-align:center">8</td>
<td style="text-align:center">1</td>
<td style="text-align:center">18</td>
</tr>
<tr>
<td style="text-align:center">PWM</td>
<td style="text-align:center">6</td>
<td style="text-align:center">8</td>
<td style="text-align:center">16</td>
</tr>
<tr>
<td style="text-align:center">類比解析度</td>
<td style="text-align:center">1024</td>
<td style="text-align:center">1024</td>
<td style="text-align:center">4096</td>
</tr>
<tr>
<td style="text-align:center">I2C</td>
<td style="text-align:center">1組</td>
<td style="text-align:center">1組</td>
<td style="text-align:center">2組</td>
</tr>
<tr>
<td style="text-align:center">SPI</td>
<td style="text-align:center">1組</td>
<td style="text-align:center">1組</td>
<td style="text-align:center">3組</td>
</tr>
<tr>
<td style="text-align:center">Wifi</td>
<td style="text-align:center">無</td>
<td style="text-align:center">802.11 b/g/n</td>
<td style="text-align:center">802.11 b/g/n</td>
</tr>
<tr>
<td style="text-align:center">Bluetooth</td>
<td style="text-align:center">無</td>
<td style="text-align:center">無</td>
<td style="text-align:center">BLE 4.2</td>
</tr>
<tr>
<td style="text-align:center">內建溫度感測</td>
<td style="text-align:center">無</td>
<td style="text-align:center">無</td>
<td style="text-align:center">有</td>
</tr>
<tr>
<td style="text-align:center">內建霍爾感測器</td>
<td style="text-align:center">無</td>
<td style="text-align:center">無</td>
<td style="text-align:center">有</td>
</tr>
<tr>
<td style="text-align:center">內建觸控電容</td>
<td style="text-align:center">無</td>
<td style="text-align:center">無</td>
<td style="text-align:center">10組</td>
</tr>
<tr>
<td style="text-align:center">售價</td>
<td style="text-align:center">100-200</td>
<td style="text-align:center">100-200</td>
<td style="text-align:center">200-300</td>
</tr>
</tbody>
</table>
</div>
<p>NodeMCU-32S 通訊腳位</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">SPI</th>
<th style="text-align:center">MOSI</th>
<th style="text-align:center">MISO</th>
<th style="text-align:center">CLK</th>
<th style="text-align:center">CS</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">HSPI</td>
<td style="text-align:center">GPIO13</td>
<td style="text-align:center">GPIO12</td>
<td style="text-align:center">GPIO14</td>
<td style="text-align:center">GPIO15</td>
</tr>
<tr>
<td style="text-align:center">VSPI</td>
<td style="text-align:center">GPIO23</td>
<td style="text-align:center">GPIO19</td>
<td style="text-align:center">GPIO18</td>
<td style="text-align:center">GPIO5</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">I2C</th>
<th style="text-align:center">SDA</th>
<th style="text-align:center">SCL</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">I2C</td>
<td style="text-align:center">GPIO21</td>
<td style="text-align:center">GPIO22</td>
</tr>
</tbody>
</table>
</div>
<p>只能作為輸入的GPIO為GPIO34, GPIO35, GPIO36, GPIO39, 其他針腳都可以雙向輸入輸出。</p>
<h3 id="BME280-溫溼度氣壓感測器"><a href="#BME280-溫溼度氣壓感測器" class="headerlink" title="BME280 溫溼度氣壓感測器"></a>BME280 溫溼度氣壓感測器</h3><p>BME280相比常見的DHT11, DHT22，有更高的精度，而且它也內建了氣壓感測器，可以用來量測高度及環境氣壓，對於天氣站來說相當適合。市面上的BME280有分3.3V和5V兩種，我購買的是3.3V版本，這點要特別注意，以免將感測器燒掉。另外買來需要將針腳焊接上去。</p>
<p><img src="https://i.imgur.com/HKs2xz0.jpg" alt=""></p>
<p>買來發現它的尺寸真的超級小，看來很省空間</p>
<p><img src="https://i.imgur.com/XqfVIjP.jpg" alt=""></p>
<p><img src="https://i.imgur.com/tC5pFwr.jpg" alt=""></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">DHT11</th>
<th style="text-align:center">DHT12</th>
<th style="text-align:center">BME280</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">感測功能</td>
<td style="text-align:center">溫度，濕度</td>
<td style="text-align:center">溫度，濕度</td>
<td style="text-align:center">溫度，濕度，氣壓</td>
</tr>
<tr>
<td style="text-align:center">溫度範圍</td>
<td style="text-align:center">0~50ºC</td>
<td style="text-align:center">-40~80ºC</td>
<td style="text-align:center">-40~85ºC</td>
</tr>
<tr>
<td style="text-align:center">溫度精度/解析度</td>
<td style="text-align:center">+-2ºC/1°C</td>
<td style="text-align:center">+-0.5ºC/0.1ºC</td>
<td style="text-align:center">+-0.5ºC/0.01°C</td>
</tr>
<tr>
<td style="text-align:center">濕度範圍</td>
<td style="text-align:center">20~90%</td>
<td style="text-align:center">0~100%</td>
<td style="text-align:center">0~100%</td>
</tr>
<tr>
<td style="text-align:center">濕度精度/解析度</td>
<td style="text-align:center">+-5%/1%</td>
<td style="text-align:center">+-5%/0.1%</td>
<td style="text-align:center">+-3%/0.008%</td>
</tr>
<tr>
<td style="text-align:center">氣壓範圍</td>
<td style="text-align:center">無</td>
<td style="text-align:center">無</td>
<td style="text-align:center">300-1100hPa</td>
</tr>
<tr>
<td style="text-align:center">氣壓精度/解析度</td>
<td style="text-align:center">無</td>
<td style="text-align:center">無</td>
<td style="text-align:center">+-1hPa/0.18hPa</td>
</tr>
</tbody>
</table>
</div>
<p>搜尋bme280來安裝函式庫，有很多種版本，我安裝的是Adafruit的。</p>
<p><img src="https://i.imgur.com/SBgPPAM.jpg" alt=""></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">腳位</th>
<th style="text-align:center">NodeMCU-32S</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Vcc</td>
<td style="text-align:center">3.3V</td>
</tr>
<tr>
<td style="text-align:center">GND</td>
<td style="text-align:center">GND</td>
</tr>
<tr>
<td style="text-align:center">SCL</td>
<td style="text-align:center">GPIO18</td>
</tr>
<tr>
<td style="text-align:center">SDA(MOSI)</td>
<td style="text-align:center">GPIO23</td>
</tr>
<tr>
<td style="text-align:center">CSE</td>
<td style="text-align:center">GPIO5</td>
</tr>
<tr>
<td style="text-align:center">SDO(MISO)</td>
<td style="text-align:center">GPIO19</td>
</tr>
</tbody>
</table>
</div>
<p>這款可以用I2C或是SPI通訊，我選擇用I2C通訊，因此只需要接SDA和SCL，我將SCL接到GPIO22，SDA接到GPIO21。接下來使用下面的測試程式碼，我們使用I2C所以不用更改，若使用SPI則須將注釋掉的地方做修改。高度計功能則需要依賴設定平地氣壓為前提去計算，因此這裡設定一大氣壓(1013.25百帕)。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_Sensor.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_BME280.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*#include &lt;SPI.h&gt;</span></span><br><span class="line"><span class="comment">#define BME_SCK 18</span></span><br><span class="line"><span class="comment">#define BME_MISO 19</span></span><br><span class="line"><span class="comment">#define BME_MOSI 23</span></span><br><span class="line"><span class="comment">#define BME_CS 5*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEALEVELPRESSURE_HPA (1013.25)</span></span><br><span class="line"></span><br><span class="line">Adafruit_BME280 bme; <span class="comment">// I2C</span></span><br><span class="line"><span class="comment">//Adafruit_BME280 bme(BME_CS); // hardware SPI</span></span><br><span class="line"><span class="comment">//Adafruit_BME280 bme(BME_CS, BME_MOSI, BME_MISO, BME_SCK); // software SPI</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> delayTime;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  Serial.println(F(<span class="string">&quot;BME280 test&quot;</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">bool</span> status;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// default settings</span></span><br><span class="line">  <span class="comment">// (you can also pass in a Wire library object like &amp;Wire2)</span></span><br><span class="line">  status = bme.begin(<span class="number">0x76</span>);  </span><br><span class="line">  <span class="keyword">if</span> (!status) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Could not find a valid BME280 sensor, check wiring!&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Serial.println(<span class="string">&quot;-- Default Test --&quot;</span>);</span><br><span class="line">  delayTime = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">  Serial.println();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123; </span><br><span class="line">  printValues();</span><br><span class="line">  delay(delayTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printValues</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.print(<span class="string">&quot;Temperature = &quot;</span>);</span><br><span class="line">  Serial.print(bme.readTemperature());</span><br><span class="line">  Serial.println(<span class="string">&quot; *C&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Convert temperature to Fahrenheit</span></span><br><span class="line">  <span class="comment">/*Serial.print(&quot;Temperature = &quot;);</span></span><br><span class="line"><span class="comment">  Serial.print(1.8 * bme.readTemperature() + 32);</span></span><br><span class="line"><span class="comment">  Serial.println(&quot; *F&quot;);*/</span></span><br><span class="line">  </span><br><span class="line">  Serial.print(<span class="string">&quot;Pressure = &quot;</span>);</span><br><span class="line">  Serial.print(bme.readPressure() / <span class="number">100.0F</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot; hPa&quot;</span>);</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Approx. Altitude = &quot;</span>);</span><br><span class="line">  Serial.print(bme.readAltitude(SEALEVELPRESSURE_HPA));</span><br><span class="line">  Serial.println(<span class="string">&quot; m&quot;</span>);</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Humidity = &quot;</span>);</span><br><span class="line">  Serial.print(bme.readHumidity());</span><br><span class="line">  Serial.println(<span class="string">&quot; %&quot;</span>);</span><br><span class="line"></span><br><span class="line">  Serial.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>將baud設定成9600，你應該可以看到感測器輸出的數據了</p>
<p><img src="https://i.imgur.com/ATSJCdK.jpg" alt=""></p>
<p>更多詳細資料：<a href="https://randomnerdtutorials.com/esp32-web-server-with-bme280-mini-weather-station/">https://randomnerdtutorials.com/esp32-web-server-with-bme280-mini-weather-station/</a></p>
<h3 id="TSL2591-環境光感測器"><a href="#TSL2591-環境光感測器" class="headerlink" title="TSL2591 環境光感測器"></a>TSL2591 環境光感測器</h3><p>TSL2591是一個超高靈敏度的光感測器，從 188 μlux 到 88000 lux 都能量測，動態範圍相當廣。支持3.3V~5V輸入，使用I2C通訊。另外它能夠量測黑暗環境下的光強度，可以應用在測量SQM(Sky Quality Meter)上，所以被我挑選當光感測器。挑選時要注意大部分的光感測器無法測量到 0.1 lux 以下的光照度，對於測量暗空品質而言，至少要到能量到 0.0003 lux 的靈敏度。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">環境</th>
<th style="text-align:center">照度(lux)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">烈日</td>
<td style="text-align:center">100000</td>
</tr>
<tr>
<td style="text-align:center">陰天</td>
<td style="text-align:center">500~6000</td>
</tr>
<tr>
<td style="text-align:center">室內</td>
<td style="text-align:center">300</td>
</tr>
<tr>
<td style="text-align:center">路燈</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td style="text-align:center">滿月</td>
<td style="text-align:center">0.2</td>
</tr>
<tr>
<td style="text-align:center">星空</td>
<td style="text-align:center">0.0003</td>
</tr>
</tbody>
</table>
</div>
<p><img src="https://i.imgur.com/ASdLXMn.jpg" alt=""></p>
<p>先安裝TSL2591的函式庫，我用的是Adafruit的。</p>
<p><img src="https://i.imgur.com/RdwQyLW.jpg" alt=""></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">針腳</th>
<th style="text-align:center">NodeMCU-32S</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Vin</td>
<td style="text-align:center">3.3V/5V</td>
</tr>
<tr>
<td style="text-align:center">GND</td>
<td style="text-align:center">GND</td>
</tr>
<tr>
<td style="text-align:center">3vo</td>
<td style="text-align:center">輸出3.3V(100mA max)</td>
</tr>
<tr>
<td style="text-align:center">Int</td>
<td style="text-align:center">INTerrupt pin(暫時用不到)</td>
</tr>
<tr>
<td style="text-align:center">SDA</td>
<td style="text-align:center">GPIO21</td>
</tr>
<tr>
<td style="text-align:center">SCL</td>
<td style="text-align:center">GPIO22</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* TSL2591 Digital Light Sensor */</span></span><br><span class="line"><span class="comment">/* Dynamic Range: 600M:1 */</span></span><br><span class="line"><span class="comment">/* Maximum Lux: 88K */</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_Sensor.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Adafruit_TSL2591.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// Example for demonstrating the TSL2591 library - public domain!</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// connect SCL to I2C Clock</span></span><br><span class="line"><span class="comment">// connect SDA to I2C Data</span></span><br><span class="line"><span class="comment">// connect Vin to 3.3-5V DC</span></span><br><span class="line"><span class="comment">// connect GROUND to common ground</span></span><br><span class="line"> </span><br><span class="line">Adafruit_TSL2591 tsl = Adafruit_TSL2591(<span class="number">2591</span>); <span class="comment">// pass in a number for the sensor identifier (for your use later)</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**************************************************************************/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Configures the gain and integration time for the TSL2591</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/**************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">configureSensor</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// You can change the gain on the fly, to adapt to brighter/dimmer light situations</span></span><br><span class="line">  <span class="comment">//tsl.setGain(TSL2591_GAIN_LOW);    // 1x gain (bright light)</span></span><br><span class="line">  tsl.setGain(TSL2591_GAIN_MED);      <span class="comment">// 25x gain</span></span><br><span class="line">  <span class="comment">//tsl.setGain(TSL2591_GAIN_HIGH);   // 428x gain</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">// Changing the integration time gives you a longer time over which to sense light</span></span><br><span class="line">  <span class="comment">// longer timelines are slower, but are good in very low light situtations!</span></span><br><span class="line">  <span class="comment">//tsl.setTiming(TSL2591_INTEGRATIONTIME_100MS);  // shortest integration time (bright light)</span></span><br><span class="line">  <span class="comment">// tsl.setTiming(TSL2591_INTEGRATIONTIME_200MS);</span></span><br><span class="line">  tsl.setTiming(TSL2591_INTEGRATIONTIME_300MS);</span><br><span class="line">  <span class="comment">// tsl.setTiming(TSL2591_INTEGRATIONTIME_400MS);</span></span><br><span class="line">  <span class="comment">// tsl.setTiming(TSL2591_INTEGRATIONTIME_500MS);</span></span><br><span class="line">  <span class="comment">// tsl.setTiming(TSL2591_INTEGRATIONTIME_600MS);  // longest integration time (dim light)</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* Display the gain and integration time for reference sake */</span>  </span><br><span class="line">  Serial.println(F(<span class="string">&quot;------------------------------------&quot;</span>));</span><br><span class="line">  Serial.print  (F(<span class="string">&quot;Gain:         &quot;</span>));</span><br><span class="line">  tsl2591Gain_t gain = tsl.getGain();</span><br><span class="line">  <span class="keyword">switch</span>(gain)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> TSL2591_GAIN_LOW:</span><br><span class="line">      Serial.println(F(<span class="string">&quot;1x (Low)&quot;</span>));</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> TSL2591_GAIN_MED:</span><br><span class="line">      Serial.println(F(<span class="string">&quot;25x (Medium)&quot;</span>));</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> TSL2591_GAIN_HIGH:</span><br><span class="line">      Serial.println(F(<span class="string">&quot;428x (High)&quot;</span>));</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> TSL2591_GAIN_MAX:</span><br><span class="line">      Serial.println(F(<span class="string">&quot;9876x (Max)&quot;</span>));</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.print  (F(<span class="string">&quot;Timing:       &quot;</span>));</span><br><span class="line">  Serial.print((tsl.getTiming() + <span class="number">1</span>) * <span class="number">100</span>, DEC); </span><br><span class="line">  Serial.println(F(<span class="string">&quot; ms&quot;</span>));</span><br><span class="line">  Serial.println(F(<span class="string">&quot;------------------------------------&quot;</span>));</span><br><span class="line">  Serial.println(F(<span class="string">&quot;&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line"> </span><br><span class="line">  Serial.println(F(<span class="string">&quot;Starting Adafruit TSL2591 Test!&quot;</span>));</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> (tsl.begin()) </span><br><span class="line">  &#123;</span><br><span class="line">    Serial.println(F(<span class="string">&quot;Found a TSL2591 sensor&quot;</span>));</span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">  &#123;</span><br><span class="line">    Serial.println(F(<span class="string">&quot;No sensor found ... check your wiring?&quot;</span>));</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* Configure the sensor */</span></span><br><span class="line">  configureSensor();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**************************************************************************/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Shows how to perform a basic read on visible, full spectrum or</span></span><br><span class="line"><span class="comment">    infrared light (returns raw 16-bit ADC values)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/**************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">simpleRead</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// Simple data read example. Just read the infrared, fullspecrtrum diode </span></span><br><span class="line">  <span class="comment">// or &#x27;visible&#x27; (difference between the two) channels.</span></span><br><span class="line">  <span class="comment">// This can take 100-600 milliseconds! Uncomment whichever of the following you want to read</span></span><br><span class="line">  <span class="keyword">uint16_t</span> x = tsl.getLuminosity(TSL2591_VISIBLE);</span><br><span class="line">  <span class="comment">//uint16_t x = tsl.getLuminosity(TSL2591_FULLSPECTRUM);</span></span><br><span class="line">  <span class="comment">//uint16_t x = tsl.getLuminosity(TSL2591_INFRARED);</span></span><br><span class="line"> </span><br><span class="line">  Serial.print(F(<span class="string">&quot;[ &quot;</span>)); Serial.print(millis()); Serial.print(F(<span class="string">&quot; ms ] &quot;</span>));</span><br><span class="line">  Serial.print(F(<span class="string">&quot;Luminosity: &quot;</span>));</span><br><span class="line">  Serial.println(x, DEC);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**************************************************************************/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Show how to read IR and Full Spectrum at once and convert to lux</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/**************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">advancedRead</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// More advanced data read example. Read 32 bits with top 16 bits IR, bottom 16 bits full spectrum</span></span><br><span class="line">  <span class="comment">// That way you can do whatever math and comparisons you want!</span></span><br><span class="line">  <span class="keyword">uint32_t</span> lum = tsl.getFullLuminosity();</span><br><span class="line">  <span class="keyword">uint16_t</span> ir, full;</span><br><span class="line">  ir = lum &gt;&gt; <span class="number">16</span>;</span><br><span class="line">  full = lum &amp; <span class="number">0xFFFF</span>;</span><br><span class="line">  Serial.print(F(<span class="string">&quot;[ &quot;</span>)); Serial.print(millis()); Serial.print(F(<span class="string">&quot; ms ] &quot;</span>));</span><br><span class="line">  Serial.print(F(<span class="string">&quot;IR: &quot;</span>)); Serial.print(ir);  Serial.print(F(<span class="string">&quot;  &quot;</span>));</span><br><span class="line">  Serial.print(F(<span class="string">&quot;Full: &quot;</span>)); Serial.print(full); Serial.print(F(<span class="string">&quot;  &quot;</span>));</span><br><span class="line">  Serial.print(F(<span class="string">&quot;Visible: &quot;</span>)); Serial.print(full - ir); Serial.print(F(<span class="string">&quot;  &quot;</span>));</span><br><span class="line">  Serial.print(F(<span class="string">&quot;Lux: &quot;</span>)); Serial.println(tsl.calculateLux(full, ir), <span class="number">6</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**************************************************************************/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Performs a read using the Adafruit Unified Sensor API.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/**************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unifiedSensorAPIRead</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">/* Get a new sensor event */</span> </span><br><span class="line">  <span class="keyword">sensors_event_t</span> event;</span><br><span class="line">  tsl.getEvent(&amp;event);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* Display the results (light is measured in lux) */</span></span><br><span class="line">  Serial.print(F(<span class="string">&quot;[ &quot;</span>)); Serial.print(event.timestamp); Serial.print(F(<span class="string">&quot; ms ] &quot;</span>));</span><br><span class="line">  <span class="keyword">if</span> ((event.light == <span class="number">0</span>) |</span><br><span class="line">      (event.light &gt; <span class="number">4294966000.0</span>) | </span><br><span class="line">      (event.light &lt;<span class="number">-4294966000.0</span>))</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">/* If event.light = 0 lux the sensor is probably saturated */</span></span><br><span class="line">    <span class="comment">/* and no reliable data could be generated! */</span></span><br><span class="line">    <span class="comment">/* if event.light is +/- 4294967040 there was a float over/underflow */</span></span><br><span class="line">    Serial.println(F(<span class="string">&quot;Invalid data (adjust gain or timing)&quot;</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    Serial.print(event.light); Serial.println(F(<span class="string">&quot; lux&quot;</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**************************************************************************/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Arduino loop function, called once &#x27;setup&#x27; is complete (your own code</span></span><br><span class="line"><span class="comment">    should go here)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/**************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="comment">//simpleRead(); </span></span><br><span class="line">  advancedRead();</span><br><span class="line">  <span class="comment">// unifiedSensorAPIRead();</span></span><br><span class="line"> </span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上傳後就能看到感測器輸出的訊息了，這一款可以感測紅外光(IR)和紅外線+可見光(IR+Visible)的光強度，相減可以得到可見光的光強度，能應用在不同地方。</p>
<p><img src="https://i.imgur.com/J8aOYnY.jpg" alt=""></p>
<p>從程式碼可以看到，這個感測器可以設定Gain，若要量測高亮度的光源，要將Gain調成Low，如果是要用在黑暗環境下，要將Gain調成High。另外還有Integration Time，時間調越長對偵測黯淡的光會有幫助，但是相對應的感測頻率會降低。</p>
<h3 id="1-8吋TFT螢幕"><a href="#1-8吋TFT螢幕" class="headerlink" title="1.8吋TFT螢幕"></a>1.8吋TFT螢幕</h3><p>這片螢幕的解析度為128x160，透過SPI串口控制，支援5V及3.3V供電，還內建SD卡擴展電路，提供讀寫SD卡的能力，驅動IC是ST7735。經過搜尋這塊螢幕似乎有兩個版本，8pin(SD)和10pin(micro SD)的版本，10pin多出來的是兩個NC針腳，並不需要接線(NC代表Not Connect，不與晶片連結，即空腳)，剩下的8pin跟8pin版本的功能一樣。另外有一側4pin接口是給SD卡用的，板子上印有SD開頭字樣。</p>
<p><img src="https://i.imgur.com/DNkOD8f.jpg" alt=""></p>
<p><img src="https://i.imgur.com/SzTPlT4.jpg" alt=""></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">pin</th>
<th style="text-align:center">Arduino</th>
<th style="text-align:center">NodeMCU-32S (ai-thinker)</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Vcc</td>
<td style="text-align:center">3.3V/5V</td>
<td style="text-align:center">3.3V/5V</td>
</tr>
<tr>
<td style="text-align:center">GND</td>
<td style="text-align:center">GND</td>
<td style="text-align:center">GND</td>
</tr>
<tr>
<td style="text-align:center">CLK(SCL,SCK)</td>
<td style="text-align:center">PIN13</td>
<td style="text-align:center">GPIO18</td>
</tr>
<tr>
<td style="text-align:center">SDA(MOSI)</td>
<td style="text-align:center">PIN11</td>
<td style="text-align:center">GPIO23</td>
</tr>
<tr>
<td style="text-align:center">RS(A0,DC)</td>
<td style="text-align:center">PIN8</td>
<td style="text-align:center">任意(這裡選GPIO17)</td>
</tr>
<tr>
<td style="text-align:center">RST</td>
<td style="text-align:center">PIN9</td>
<td style="text-align:center">EN</td>
</tr>
<tr>
<td style="text-align:center">CS(SS)</td>
<td style="text-align:center">PIN10</td>
<td style="text-align:center">GPIO5</td>
</tr>
</tbody>
</table>
</div>
<p>NodeMCU有三組SPI接口，板子命名為SPI,HSPI和VSPI，之間並沒有差別，都是SPI接口，僅是區分不同組而已。</p>
<p>SPI介紹: <a href="https://ithelp.ithome.com.tw/articles/10245910">https://ithelp.ithome.com.tw/articles/10245910</a></p>
<p>使用前要先安裝Adafruit GFX函式庫，點選Librabies Manager，搜尋ST7735就能找到了。點選安裝就可以了，沒意外它會連GFX函式庫也一起安裝，沒有的話就搜尋一下安裝。</p>
<p><img src="https://i.imgur.com/PWR0wuZ.jpg" alt=""></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_GFX.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_ST7735.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Fonts/FreeSerif12pt7b.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Fonts/FreeSansBold9pt7b.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Fonts/FreeSans9pt7b.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_CS   5 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_DC   17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_RST  0</span></span><br><span class="line"></span><br><span class="line">Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  tft.initR(INITR_BLACKTAB);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  tft.setRotation(<span class="number">1</span>);  <span class="comment">//screen rotation</span></span><br><span class="line">  tft.fillScreen(ST77XX_BLACK);  <span class="comment">//filled with black color</span></span><br><span class="line">  tft.setCursor(<span class="number">10</span>, <span class="number">30</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.setFont(&amp;FreeSerif12pt7b);</span><br><span class="line">  tft.print(<span class="string">&quot;Hello World !&quot;</span>);</span><br><span class="line">  tft.setCursor(<span class="number">0</span>, <span class="number">60</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_RED);</span><br><span class="line">  tft.setFont(&amp;FreeSansBold9pt7b);</span><br><span class="line">  tft.print(<span class="string">&quot;I&#x27;m red !&quot;</span>);</span><br><span class="line">  tft.setCursor(<span class="number">0</span>, <span class="number">80</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_YELLOW);</span><br><span class="line">  tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line">  tft.print(<span class="string">&quot;I&#x27;m yellow&quot;</span>);</span><br><span class="line">  showIcons();</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showIcons</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tft.fillRoundRect(<span class="number">30</span>, <span class="number">95</span>, <span class="number">30</span>, <span class="number">30</span>, <span class="number">5</span>, ST77XX_MAGENTA); <span class="comment">//x,y,w,h,radius,color</span></span><br><span class="line">  tft.fillCircle(<span class="number">80</span>, <span class="number">110</span>, <span class="number">15</span>, ST77XX_BLUE);  <span class="comment">//x,y,radius</span></span><br><span class="line">  tft.drawRect(<span class="number">105</span>, <span class="number">95</span>, <span class="number">30</span>, <span class="number">30</span>,ST77XX_GREEN);  <span class="comment">//x,y,width,height</span></span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>顯示效果，背光感覺蠻亮的，下次應該換成OLED試試看。</p>
<p><img src="https://i.imgur.com/f6MAboE.jpg" alt=""></p>
<p>可以透過增加在Vcc前加一顆100歐姆電阻來稍微降低螢幕亮度，可惜這塊螢幕的LED和驅動晶片供電不是分開的，因此不能單獨去控制LED的亮度，若調降太多電壓，螢幕會開不起來。</p>
<p>接著我改寫了一下代碼，透過控制螢幕的Vcc腳位，每隔十秒開關螢幕一次，這樣的功能搭配按鈕就能達成螢幕開關的功能，當需要的時候再打開螢幕，可以省不少電。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_GFX.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_ST7735.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Fonts/FreeSerif12pt7b.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Fonts/FreeSansBold9pt7b.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Fonts/FreeSans9pt7b.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_CS   5 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_DC   17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_RST  0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_Vcc  16</span></span><br><span class="line"></span><br><span class="line">Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);</span><br><span class="line"><span class="keyword">int</span> screen_switch = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">  pinMode(TFT_Vcc, OUTPUT);</span><br><span class="line">  digitalWrite(TFT_Vcc, screen_switch);</span><br><span class="line">  tftInit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tftInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tft.initR(INITR_BLACKTAB);</span><br><span class="line"></span><br><span class="line">  tft.setRotation(<span class="number">1</span>);  <span class="comment">//screen rotation</span></span><br><span class="line">  tft.fillScreen(ST77XX_BLACK);  <span class="comment">//filled with black color</span></span><br><span class="line">  tft.setCursor(<span class="number">10</span>, <span class="number">30</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.setFont(&amp;FreeSerif12pt7b);</span><br><span class="line">  tft.print(<span class="string">&quot;Hello World !&quot;</span>);</span><br><span class="line">  tft.setCursor(<span class="number">0</span>, <span class="number">60</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_RED);</span><br><span class="line">  tft.setFont(&amp;FreeSansBold9pt7b);</span><br><span class="line">  tft.print(<span class="string">&quot;I&#x27;m red !&quot;</span>);</span><br><span class="line">  tft.setCursor(<span class="number">0</span>, <span class="number">80</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_YELLOW);</span><br><span class="line">  tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line">  tft.print(<span class="string">&quot;I&#x27;m yellow&quot;</span>);</span><br><span class="line"></span><br><span class="line">  delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  screen_switch = <span class="number">1</span> - screen_switch;</span><br><span class="line">  digitalWrite(TFT_Vcc, screen_switch);</span><br><span class="line">  tftInit();</span><br><span class="line">  delay(<span class="number">10000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Adafruit GFX 函式庫介紹: <a href="https://atceiling.blogspot.com/2019/09/arduino65adafruitgfx_7.html">https://atceiling.blogspot.com/2019/09/arduino65adafruitgfx_7.html</a></p>
<h2 id="安裝及配置開發環境"><a href="#安裝及配置開發環境" class="headerlink" title="安裝及配置開發環境"></a>安裝及配置開發環境</h2><p>我這次使用的開發版是NodeMCU-32S，可以用Arduino IDE進行開發。因此我這次使用的是Arduino IDE 2.0，2.0版本目前還在beta測試階段，但是相比舊版的IDE，不僅編譯速度變快，同時也加入許多方便的功能。IDE可以從<a href="https://www.arduino.cc/en/software">官網</a>下載。</p>
<p><img src="https://i.imgur.com/ECwii2G.jpg" alt=""></p>
<p>點選左上角的File-&gt;Preferences，在最下面一欄添加URL的地方，將下方網址添加給IDE。<br><a href="https://dl.espressif.com/dl/package_esp32_index.json">https://dl.espressif.com/dl/package_esp32_index.json</a></p>
<p><img src="https://i.imgur.com/mshAqWT.png" alt=""></p>
<p>輸入後點選左側欄位的Board Manager，輸入esp32就可以安裝相關套件了。</p>
<p><img src="https://i.imgur.com/cnajwzk.jpg" alt=""></p>
<p>待電腦安裝完畢，點選上方的no board selected，搜尋nodemcu就能找到NodeMCU-32S的選項，這樣一來就能進行NodeMCU-32S的開發了。</p>
<p><img src="https://i.imgur.com/BDYv3mx.jpg" alt=""></p>
<p>連接開發板後卻發現找不到裝置，這是因為我們還沒安裝驅動，我購買的板子它的USB晶片是CH340C，它的驅動可以在<a href="http://www.wch.cn/download/CH341SER_EXE.html">這裡</a>找到，下載後安裝就能辨識裝置了，開啟裝置管理員可以看到正確識別。</p>
<p><img src="https://i.imgur.com/fhzJ6zx.jpg" alt=""></p>
<p>重新啟動IDE，就能找到板子了。再來我們寫個簡單程序測試一下</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED 2</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your setup code here, to run once:</span></span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  pinMode(LED, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your main code here, to run repeatedly:</span></span><br><span class="line">  digitalWrite(LED, HIGH);</span><br><span class="line">  Serial.println(<span class="string">&quot;LED is on&quot;</span>);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">  digitalWrite(LED, LOW);</span><br><span class="line">  Serial.println(<span class="string">&quot;LED is off&quot;</span>);</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/0FfNL4h.jpg" alt=""></p>
<p>編譯簡單程序卻報錯，Error: 2 UNKNOWN: exec: “cmd”: executable file not found in %PATH%，解決方式是將:\Windows\System32路徑加到環境變量裡，這個資料夾是cmd.exe的所在位置。添加完後重啟電腦。如果不想重啟，用管理員身分開啟cmd，輸入以下指令<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">taskkill &#x2F;f &#x2F;im explorer.exe</span><br><span class="line">explorer.exe</span><br></pre></td></tr></table></figure><br>輸入完後關閉cmd即可更新環境變數，重啟IDE就能抓到cmd了。</p>
<p>上傳後板子上的LED每格一秒會閃爍一次，並在Serial Monitor可以看到輸出的訊息。</p>
<p><img src="https://i.imgur.com/Dy4uQ82.jpg" alt=""></p>
<p><img src="https://i.imgur.com/GF7wfwd.jpg" alt=""></p>
<h2 id="撰寫天氣站軟體"><a href="#撰寫天氣站軟體" class="headerlink" title="撰寫天氣站軟體"></a>撰寫天氣站軟體</h2><h3 id="基本功能-結合BME280-TSL2591"><a href="#基本功能-結合BME280-TSL2591" class="headerlink" title="基本功能(結合BME280, TSL2591)"></a>基本功能(結合BME280, TSL2591)</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_Sensor.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_BME280.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_TSL2591.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEALEVELPRESSURE_HPA (1001.25) <span class="comment">// 1 atm = 1013.25 hPa</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GAIN TSL2591_GAIN_MED <span class="comment">// (LOW, MID, HIGH)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INTEGRATIONTIME TSL2591_INTEGRATIONTIME_300MS <span class="comment">// (100MS,200MS,300MS,400MS,500MS,600MS)</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELAY_TIME 10000 <span class="comment">// interval time for every measurement (ms)</span></span></span><br><span class="line"></span><br><span class="line">Adafruit_BME280 bme; <span class="comment">//I2C</span></span><br><span class="line">Adafruit_TSL2591 tsl = Adafruit_TSL2591(<span class="number">2591</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> temp, humidity, pressure, altitude, luminosity;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line"></span><br><span class="line">  init_bme280();</span><br><span class="line">  init_tsl2591();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  temp = get_temperature();</span><br><span class="line">  humidity = get_humidity();</span><br><span class="line">  pressure = get_pressure();</span><br><span class="line">  altitude = get_altitude();</span><br><span class="line">  luminosity = get_luminosity();</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Temp: &quot;</span>); Serial.print(temp); Serial.println(<span class="string">&quot;*C&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Humid: &quot;</span>); Serial.print(humidity); Serial.println(<span class="string">&quot;%&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Pressure: &quot;</span>); Serial.print(pressure/<span class="number">100.0</span>); Serial.println(<span class="string">&quot;hPa&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Alt: &quot;</span>); Serial.print(altitude); Serial.println(<span class="string">&quot;m&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Lumin: &quot;</span>); Serial.print(luminosity); Serial.println(<span class="string">&quot;lux&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  delay(DELAY_TIME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_bme280</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  bme.begin(<span class="number">0x76</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_tsl2591</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tsl.begin(<span class="number">0x29</span>);</span><br><span class="line">  tsl.setGain(GAIN);</span><br><span class="line">  tsl.setTiming(INTEGRATIONTIME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_temperature</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readTemperature();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_humidity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readHumidity();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_altitude</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readAltitude(SEALEVELPRESSURE_HPA);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_pressure</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readPressure();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_luminosity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">uint32_t</span> lum = tsl.getFullLuminosity();</span><br><span class="line">  <span class="keyword">uint16_t</span> ir,full;</span><br><span class="line">  ir = lum &gt;&gt; <span class="number">16</span>;</span><br><span class="line">  full = lum &amp; <span class="number">0xFFFF</span>;</span><br><span class="line">  <span class="keyword">return</span> tsl.calculateLux(full, ir); <span class="comment">// return -1 if the value blows up</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>程式碼中define了幾個常量<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEALEVELPRESSURE_HPA (1001.25) <span class="comment">// 1 atm = 1013.25 hPa</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GAIN TSL2591_GAIN_HIGH <span class="comment">// (LOW, MID, HIGH)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INTEGRATIONTIME TSL2591_INTEGRATIONTIME_600MS <span class="comment">// (100MS,200MS,300MS,400MS,500MS,600MS)</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELAY_TIME 10000 <span class="comment">// interval time for every measurement (ms)</span></span></span><br></pre></td></tr></table></figure><br>首先第一行定義了海平面的氣壓，為了計算高度用(高度計算的原理是測量氣壓減去海平面氣壓，高度升高10m約降低1hPa)，可以從氣象局官網查詢，也能設為一大氣壓。第二行是TSL2591的Gain，由於我們要測量黑暗天空的品質(SQM)，因此將Gain調成HIGH來測量極低環境下的光源，另外也將INTEGRATIONTIME調到最長。第四行則代表每30秒測量一次數據，這裡要注意<strong>溫溼度測量的採樣頻率不要太高，避免感測器升溫影響數據</strong>。</p>
<div class="note warning modern"><p>官方建議量測間隔不要低於1秒，否則感測器可能會受到電流加熱影響</p>
</div>
<p><img src="https://i.imgur.com/QSywy04.jpg" alt=""></p>
<h3 id="將數據顯示在TFT螢幕上"><a href="#將數據顯示在TFT螢幕上" class="headerlink" title="將數據顯示在TFT螢幕上"></a>將數據顯示在TFT螢幕上</h3><p>大部分的功能可以參照上方寫的，這裡要注意的是這次選的螢幕解析度只有160x128，因此要衡量一下版面怎麼配置，才能最好的顯示出來。比較困難的是顯示圖片，這次我打算在螢幕上顯示幾個不同的icon，因此需要用到Adafruit GFX函式庫裡的drawBitmap()。詳細教學可以參考這部<a href="https://www.youtube.com/watch?v=7ER1fbDoc20">影片</a>，我在與程式碼同個資料夾下建立新檔案<code>icon.c</code>，內容如下</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// icon.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pgmspace.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> icon_temp[] PROGMEM = &#123;</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x11</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x01</span>,<span class="number">0x93</span>,<span class="number">0xC9</span>,<span class="number">0x80</span>,</span><br><span class="line">  <span class="number">0x01</span>,<span class="number">0xF2</span>,<span class="number">0x4F</span>,<span class="number">0x80</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x4C</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x4C</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x07</span>,<span class="number">0xB2</span>,<span class="number">0x4D</span>,<span class="number">0xE0</span>,</span><br><span class="line">  <span class="number">0x07</span>,<span class="number">0xF2</span>,<span class="number">0x4F</span>,<span class="number">0xE0</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x4C</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x4C</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x01</span>,<span class="number">0xB3</span>,<span class="number">0xC9</span>,<span class="number">0x80</span>,</span><br><span class="line">  <span class="number">0x01</span>,<span class="number">0xB3</span>,<span class="number">0xC1</span>,<span class="number">0x80</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x48</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x07</span>,<span class="number">0xB2</span>,<span class="number">0x41</span>,<span class="number">0xE0</span>,</span><br><span class="line">  <span class="number">0x07</span>,<span class="number">0xB2</span>,<span class="number">0x49</span>,<span class="number">0xE0</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x4C</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x32</span>,<span class="number">0x4C</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x62</span>,<span class="number">0x46</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x46</span>,<span class="number">0x62</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0xCC</span>,<span class="number">0x33</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0xC8</span>,<span class="number">0x13</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0xC8</span>,<span class="number">0x13</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0xC8</span>,<span class="number">0x13</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0xCC</span>,<span class="number">0x33</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x67</span>,<span class="number">0xE6</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x63</span>,<span class="number">0xC6</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,</span><br><span class="line">  <span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0xE0</span>,<span class="number">0x00</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>裡面是用陣列存放每個像素的值，關於將圖片轉成陣列，可以使用這個<a href="https://marlinfw.org/tools/u8glib/converter.html">網站</a>。注意第一行的<code>#include &lt;pgmspace.h&gt;</code>要寫，因為ESP32的RAM很小，加上這行讓這些圖片陣列能使用空間較大的program memory。</p>
<p><img src="https://i.imgur.com/wZ1XwiT.jpg" alt=""></p>
<p>經過完一番調整，終於完成了基本的版面，上面顯示各種數值，分別是溫度、SQM數值、濕度、氣壓、露點溫度以及海拔。我設定成10秒更新一次，在螢幕刷新上我注意到螢幕會有閃爍問題，因為每次刷新都需要將整個螢幕塗黑再一一畫上去，加上響應速度不快，導致閃爍(Flickering)。如果不使用自訂字型，去用預設的字型的話，可以只更新數字的部分，而不是將整張畫面重畫，能大幅降低閃爍情形，可惜預設字型很醜且大小不適合。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_Sensor.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_BME280.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_TSL2591.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_GFX.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_ST7735.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Fonts/FreeSans9pt7b.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEALEVELPRESSURE_HPA 1003.0 <span class="comment">// 1 atm = 1013.25 hPa</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GAIN TSL2591_GAIN_HIGH <span class="comment">// (LOW, MID, HIGH)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INTEGRATIONTIME TSL2591_INTEGRATIONTIME_500MS <span class="comment">// (100MS,200MS,300MS,400MS,500MS,600MS)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EFFECTIVE_SOLID_ANGLE 1.532 <span class="comment">// solid angle in steradians for SQM</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELAY_TIME 10000 <span class="comment">// interval time for every measurement</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_CS   5 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_DC   17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_RST  0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_Vcc  16</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLACK   0x0000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLUE    0x001F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RED     0xF800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GREEN   0x07E0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CYAN    0x07FF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAGENTA 0xF81F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YELLOW  0xFFE0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WHITE   0xFFFF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GREY     0xD6BA</span></span><br><span class="line"></span><br><span class="line">Adafruit_BME280 bme; <span class="comment">//I2C</span></span><br><span class="line">Adafruit_TSL2591 tsl = Adafruit_TSL2591(<span class="number">2591</span>);</span><br><span class="line">Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> temp, humidity, pressure, altitude, luminosity, dewpoint, SQM;</span><br><span class="line"></span><br><span class="line"><span class="comment">// icon&#x27;s bitmap</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_temp[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_humidity[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_pressure[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_SQM[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_dew[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_altitude[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_wifi[];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line"></span><br><span class="line">  pinMode(TFT_Vcc, OUTPUT);</span><br><span class="line">  digitalWrite(TFT_Vcc, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  init_bme280();</span><br><span class="line">  init_tsl2591();</span><br><span class="line">  init_tft();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  temp = get_temperature();</span><br><span class="line">  humidity = get_humidity();</span><br><span class="line">  pressure = get_pressure();</span><br><span class="line">  altitude = get_altitude();</span><br><span class="line">  luminosity = get_luminosity();</span><br><span class="line"></span><br><span class="line">  dewpoint = temp - ((<span class="number">100</span>-humidity)/<span class="number">5.</span>); <span class="comment">// calculate dew point</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//calculate SQM</span></span><br><span class="line">  SQM = log10f((luminosity/EFFECTIVE_SOLID_ANGLE)/<span class="number">108000</span>)/(<span class="number">-0.4</span>);</span><br><span class="line"></span><br><span class="line">  update_tft(temp, humidity, pressure, altitude, luminosity, dewpoint);</span><br><span class="line"></span><br><span class="line">  Serial.print(<span class="string">&quot;Temp: &quot;</span>); Serial.print(temp); Serial.println(<span class="string">&quot;*C&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;SQM: &quot;</span>); Serial.print(SQM); Serial.println(<span class="string">&quot;Mag/as^2&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Humid: &quot;</span>); Serial.print(humidity); Serial.println(<span class="string">&quot;%&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Pressure: &quot;</span>); Serial.print(pressure); Serial.println(<span class="string">&quot;hPa&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Alt: &quot;</span>); Serial.print(altitude); Serial.println(<span class="string">&quot;m&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;DewPoint: &quot;</span>); Serial.print(dewpoint); Serial.println(<span class="string">&quot;*C&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Lumin: &quot;</span>); Serial.print(luminosity); Serial.println(<span class="string">&quot;lux&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  delay(DELAY_TIME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_bme280</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  bme.begin(<span class="number">0x76</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_tsl2591</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tsl.begin(<span class="number">0x29</span>);</span><br><span class="line">  tsl.setGain(GAIN);</span><br><span class="line">  tsl.setTiming(INTEGRATIONTIME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_tft</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tft.initR(INITR_BLACKTAB); <span class="comment">// for 1.8&quot; ST7735 TFT display</span></span><br><span class="line">  tft.setRotation(<span class="number">1</span>);  <span class="comment">//screen rotation</span></span><br><span class="line">  tft.setTextWrap(<span class="literal">false</span>);</span><br><span class="line">  tft.fillScreen(ST77XX_BLACK);  <span class="comment">//filled with black color</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_temperature</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readTemperature();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_humidity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readHumidity();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_altitude</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readAltitude(SEALEVELPRESSURE_HPA);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_pressure</span><span class="params">()</span> </span>&#123; <span class="comment">// return hPa</span></span><br><span class="line">  <span class="keyword">return</span> bme.readPressure()/<span class="number">100.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_luminosity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">uint32_t</span> lum = tsl.getFullLuminosity();</span><br><span class="line">  <span class="keyword">uint16_t</span> ir,full;</span><br><span class="line">  ir = lum &gt;&gt; <span class="number">16</span>;</span><br><span class="line">  full = lum &amp; <span class="number">0xFFFF</span>;</span><br><span class="line">  <span class="keyword">return</span> tsl.calculateLux(full, ir); <span class="comment">// return -1 if the value blows up</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_tft</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure, <span class="keyword">float</span> altitude, <span class="keyword">float</span> luminosity, <span class="keyword">float</span> dewpoint)</span> </span>&#123;</span><br><span class="line">  tft.fillScreen(ST77XX_BLACK);</span><br><span class="line">  tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.setCursor(<span class="number">4</span>, <span class="number">18</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(<span class="string">&quot;Weather Station&quot;</span>);</span><br><span class="line">  tft.drawBitmap(<span class="number">140</span>, <span class="number">4</span>, icon_wifi, <span class="number">16</span>, <span class="number">16</span>, GREEN);</span><br><span class="line">  tft.drawLine(<span class="number">0</span>, <span class="number">24</span>, <span class="number">160</span>, <span class="number">24</span>, WHITE);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">0</span>, <span class="number">32</span>, icon_temp, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">26</span>, <span class="number">47</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(temp);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">72</span>,<span class="number">50</span>); tft.print(<span class="string">&quot;C&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">80</span>, <span class="number">32</span>, icon_SQM, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">106</span>, <span class="number">46</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(SQM);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">108</span>,<span class="number">49</span>); tft.print(<span class="string">&quot;Mag/as2&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">0</span>, <span class="number">66</span>, icon_humidity, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">26</span>, <span class="number">84</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(humidity);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">72</span>,<span class="number">88</span>); tft.print(<span class="string">&quot;%&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">80</span>, <span class="number">66</span>, icon_pressure, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">105</span>, <span class="number">84</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(pressure, <span class="number">1</span>);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">140</span>,<span class="number">88</span>); tft.print(<span class="string">&quot;hPa&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">0</span>, <span class="number">100</span>, icon_dew, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">26</span>, <span class="number">117</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(dewpoint);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">72</span>,<span class="number">120</span>); tft.print(<span class="string">&quot;C&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">80</span>, <span class="number">100</span>, icon_altitude, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">105</span>, <span class="number">117</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(altitude);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">152</span>,<span class="number">119</span>); tft.print(<span class="string">&quot;m&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/VKgriCL.jpg" alt=""></p>
<p>裡面有透過溫溼度去換算露點溫度，以及SQM數值的計算。</p>
<h3 id="露點溫度及SQM數值計算"><a href="#露點溫度及SQM數值計算" class="headerlink" title="露點溫度及SQM數值計算"></a>露點溫度及SQM數值計算</h3><h4 id="露點溫度"><a href="#露點溫度" class="headerlink" title="露點溫度"></a>露點溫度</h4><p>當環境溫度低於露點溫度時，空氣中的水氣就會凝結，這對進行天文攝影的人來說影響很大，有可能會讓相機和望遠鏡進水，因此新增了這一項有用的資訊，露點溫度能從溫度和濕度去計算，較簡單的近似是</p>
<script type="math/tex; mode=display">
T_{d} = T - (100-RH)/5</script><p>$T_{d}$是露點溫度，$T$是環境溫度，$RH$是相對溼度，這條近似的式子在濕度50%以上的誤差可以小於+-1度，算是很好的準確度。</p>
<h4 id="SQM數值"><a href="#SQM數值" class="headerlink" title="SQM數值"></a>SQM數值</h4><p>SQM數值是科學家提出來用來測量夜空天空背景亮度的單位，單位是$Magnitude/arcsec^{2}$，單位面積下的亮度。一般來說業餘天文家會用加拿大公司 Unihedron 生產的 SQM (Sky Quality Meter) 來測量SQM數值，這種儀器價格約落在119~135美元，出廠都有經過儀器校正，且體積小方便攜帶，我自己也有一台，去戶外觀星時都會隨時測量天空亮度，來衡量光害汙染程度。</p>
<p><img src="https://i.imgur.com/5BJCjsg.jpg" alt=""></p>
<p><img src="https://i.imgur.com/TCme7GZ.jpg" alt=""></p>
<p>偵測器上藍藍一片的是UV-IR截止濾鏡，用來濾掉紅外和紫外光，只允許可見光通過，以符合肉眼目視的範圍。裡面用的光感測器是TSL237S-LF，偵測暗光能力不錯，但因年代久遠，目前很難找到貨源。</p>
<p>網路上搜尋光害地圖，就能看到世界各地光害汙染程度，這些測量就是以SQM數值去統計和繪製，台灣的鹿林天文台，合歡山暗光公園，都有SQM監測裝置，可以研究當地的光汙染變化。</p>
<p><img src="https://i.imgur.com/ubdy9ej.jpg" alt=""></p>
<p>SQM數值的計算可以從光照度(lux)來換算，首先要先將光照度(Illuminance)換成光度(luminance)</p>
<script type="math/tex; mode=display">
1 lux = 1 sr \cdot cd/m^{2}</script><p>其中$sr$是立體角(solid angle)，這個角度與你感測器所能偵測的張角有關，一般SQM機器會偵測天空直徑範圍80度的區域，這區域裡的光會進到感測器裡，而附有鏡頭的SQM-L，則是偵測10度範圍的天空。<a href="http://www.unihedron.com/projects/darksky/faqsqm.php">官網</a>有提到它們販售的SQM的立體角是1.532sr，根據儀器設計不同，這個立體角也會不同。</p>
<script type="math/tex; mode=display">
    SQM\text{ }Brightness = -log_{10}([\text{value in cd/m2}]/108000)/0.4</script><p>上面的公式就是SQM數值的定義，一般的夜空亮度數值落在16~22，我先前去鹿林天文台的時候，有量到超過22的數值，光害極小，能輕易看見銀河和數不盡的星星。</p>
<p>第一次測出來的結果與我手邊的SQM儀器相差不遠，但是仍需要校正，等到做好了外殼，到時修改預設的立體角就能校正了，要注意光感測元件不要傾斜，盡量與開口平行，否會導致測到的光大幅下降，失去準度。</p>
<h3 id="網路-IoT-功能"><a href="#網路-IoT-功能" class="headerlink" title="網路(IoT)功能"></a>網路(IoT)功能</h3><p>這台NodeMCU-32S最特別的就是它有內建Wi-Fi和藍芽晶片，當然要讓我們測到的資料有能力傳送到網路上阿。接下來將介紹這台的連網功能，並結合Adafruit來達成網頁監測數據的功能。</p>
<p>首先先安裝MQTT函式庫</p>
<p><img src="https://i.imgur.com/FMTyc3L.jpg" alt=""></p>
<p><img src="https://i.imgur.com/SyuYL9S.jpg" alt=""></p>
<p><img src="https://i.imgur.com/muiOqI6.jpg" alt=""></p>
<p><img src="https://i.imgur.com/jkioXiv.jpg" alt=""></p>
<p><img src="https://i.imgur.com/2o4dvsG.jpg" alt=""></p>
<p><img src="https://i.imgur.com/TQHuCh3.jpg" alt=""></p>
<p><img src="https://i.imgur.com/JXA1lIv.jpg" alt=""></p>
<p><img src="https://i.imgur.com/LGiLgwy.jpg" alt=""></p>
<p>從feed頁面查看名稱，點開後看網址後綴，<strong>feed名稱的空格會被-替換掉，大寫變成小寫，需要注意</strong>。這裡的名稱就是我們要寫入程式碼的feed名稱。</p>
<p><img src="https://i.imgur.com/4ZHcSa6.jpg" alt=""></p>
<p><img src="https://i.imgur.com/ZpJeUCy.jpg" alt=""></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_Sensor.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_BME280.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_TSL2591.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_GFX.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_ST7735.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Fonts/FreeSans9pt7b.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_MQTT.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_MQTT_Client.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Wi-Fi parameters</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WLAN_SSID <span class="meta-string">&quot;Wooster&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WLAN_PASSWD <span class="meta-string">&quot;123456789&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WLAN_TIMEOUT_MS 15000</span></span><br><span class="line"><span class="comment">// Adafruit IO</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_SERVER <span class="meta-string">&quot;io.adafruit.com&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_SERVERPORT 1883</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_USERNAME <span class="meta-string">&quot;jamiechang917&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_KEY <span class="meta-string">&quot;填入你的金鑰(key)&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEALEVELPRESSURE_HPA 1003.0 <span class="comment">// 1 atm = 1013.25 hPa</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GAIN TSL2591_GAIN_HIGH <span class="comment">// (LOW, MID, HIGH)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INTEGRATIONTIME TSL2591_INTEGRATIONTIME_500MS <span class="comment">// (100MS,200MS,300MS,400MS,500MS,600MS)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EFFECTIVE_SOLID_ANGLE 1.532 <span class="comment">// solid angle in steradians for SQM</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCREEN_REFRESH_TIME 10 <span class="comment">// (second) refresh the screen every 10 seconds</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEND_DATA_TIME 15 <span class="comment">// (second) send data to adafruit io every 15 seconds</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_CS   5 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_DC   17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_RST  0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_Vcc  16</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLACK   0x0000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLUE    0x001F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RED     0xF800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GREEN   0x07E0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CYAN    0x07FF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAGENTA 0xF81F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YELLOW  0xFFE0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WHITE   0xFFFF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GREY     0xD6BA</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Setup the WiFi and MQTT client</span></span><br><span class="line">WiFiClient client;</span><br><span class="line"><span class="function">Adafruit_MQTT_Client <span class="title">mqtt</span><span class="params">(&amp;client, AIO_SERVER, AIO_SERVERPORT, AIO_USERNAME, AIO_KEY)</span></span>;</span><br><span class="line">Adafruit_MQTT_Publish AIO_temp = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/temperature&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_humidity = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/humidity&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_SQM = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/sqm&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_pressure = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/pressure&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_altitude = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/altitude&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_dewpoint = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/dew-point&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// setup the sensors</span></span><br><span class="line">Adafruit_BME280 bme; <span class="comment">//I2C</span></span><br><span class="line">Adafruit_TSL2591 tsl = Adafruit_TSL2591(<span class="number">2591</span>);</span><br><span class="line">Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> temp, humidity, pressure, altitude, luminosity, dewpoint, SQM;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> refresh_cnt = <span class="number">0</span>, send_cnt = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// icon&#x27;s bitmap</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_temp[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_humidity[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_pressure[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_SQM[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_dew[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_altitude[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_wifi[];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line"></span><br><span class="line">  pinMode(TFT_Vcc, OUTPUT);</span><br><span class="line">  digitalWrite(TFT_Vcc, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">  init_bme280();</span><br><span class="line">  init_tsl2591();</span><br><span class="line">  init_tft();</span><br><span class="line">  measure();</span><br><span class="line">  update_tft(temp, humidity, pressure, altitude, dewpoint, SQM);</span><br><span class="line"></span><br><span class="line">  connect_wifi();</span><br><span class="line">  connect_adafruit();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (refresh_cnt &gt;= SCREEN_REFRESH_TIME) &#123;</span><br><span class="line">    refresh_cnt = <span class="number">0</span>;</span><br><span class="line">    measure();</span><br><span class="line">    update_tft(temp, humidity, pressure, altitude, dewpoint, SQM);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (send_cnt &gt;= SEND_DATA_TIME) &#123;</span><br><span class="line">    send_cnt = <span class="number">0</span>;</span><br><span class="line">    measure();</span><br><span class="line">    <span class="comment">// send data to adafruit io</span></span><br><span class="line">    <span class="keyword">if</span> (!mqtt.connected()) &#123; <span class="comment">// reconnect when disconnecting</span></span><br><span class="line">      Serial.println(<span class="string">&quot;Reconnecting...&quot;</span>);</span><br><span class="line">      connect_wifi();</span><br><span class="line">      connect_adafruit();</span><br><span class="line">    &#125;</span><br><span class="line">    send_data(temp, humidity, pressure, altitude, dewpoint, SQM);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  refresh_cnt += <span class="number">1</span>;</span><br><span class="line">  send_cnt += <span class="number">1</span>;</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_bme280</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  bme.begin(<span class="number">0x76</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_tsl2591</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tsl.begin(<span class="number">0x29</span>);</span><br><span class="line">  tsl.setGain(GAIN);</span><br><span class="line">  tsl.setTiming(INTEGRATIONTIME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_tft</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tft.initR(INITR_BLACKTAB); <span class="comment">// for 1.8&quot; ST7735 TFT display</span></span><br><span class="line">  tft.setRotation(<span class="number">1</span>);  <span class="comment">//screen rotation</span></span><br><span class="line">  tft.setTextWrap(<span class="literal">false</span>);</span><br><span class="line">  tft.fillScreen(ST77XX_BLACK);  <span class="comment">//filled with black color</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_temperature</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readTemperature();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_humidity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readHumidity();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_altitude</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readAltitude(SEALEVELPRESSURE_HPA);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_pressure</span><span class="params">()</span> </span>&#123; <span class="comment">// return hPa</span></span><br><span class="line">  <span class="keyword">return</span> bme.readPressure()/<span class="number">100.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_luminosity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">uint32_t</span> lum = tsl.getFullLuminosity();</span><br><span class="line">  <span class="keyword">uint16_t</span> ir,full;</span><br><span class="line">  ir = lum &gt;&gt; <span class="number">16</span>;</span><br><span class="line">  full = lum &amp; <span class="number">0xFFFF</span>;</span><br><span class="line">  <span class="keyword">return</span> tsl.calculateLux(full, ir); <span class="comment">// return -1 if the value blows up</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">measure</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  temp = get_temperature();</span><br><span class="line">  humidity = get_humidity();</span><br><span class="line">  pressure = get_pressure();</span><br><span class="line">  altitude = get_altitude();</span><br><span class="line">  luminosity = get_luminosity();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// calculate dew point</span></span><br><span class="line">  dewpoint = temp - ((<span class="number">100</span>-humidity)/<span class="number">5.</span>);</span><br><span class="line">  <span class="comment">// calculate SQM</span></span><br><span class="line">  SQM = log10f((luminosity/EFFECTIVE_SOLID_ANGLE)/<span class="number">108000</span>)/(<span class="number">-0.4</span>);</span><br><span class="line"></span><br><span class="line">  Serial.println(<span class="string">&quot;=============Measurement=============&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Temperature:\t&quot;</span>); Serial.print(temp); Serial.println(<span class="string">&quot; C&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;SQM:\t&quot;</span>); Serial.print(SQM); Serial.println(<span class="string">&quot; Mag/as^2&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Humidity:\t&quot;</span>); Serial.print(humidity); Serial.println(<span class="string">&quot; %&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Pressure:\t&quot;</span>); Serial.print(pressure); Serial.println(<span class="string">&quot; hPa&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Altitude:\t&quot;</span>); Serial.print(altitude); Serial.println(<span class="string">&quot; m&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Dew Point:\t&quot;</span>); Serial.print(dewpoint); Serial.println(<span class="string">&quot; C&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Illuminance:\t&quot;</span>); Serial.print(luminosity); Serial.println(<span class="string">&quot; lux&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_tft</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure, <span class="keyword">float</span> altitude, <span class="keyword">float</span> dewpoint, <span class="keyword">float</span> SQM)</span> </span>&#123;</span><br><span class="line">  tft.fillScreen(ST77XX_BLACK);</span><br><span class="line">  tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.setCursor(<span class="number">4</span>, <span class="number">18</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(<span class="string">&quot;Weather Station&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    tft.drawBitmap(<span class="number">140</span>, <span class="number">4</span>, icon_wifi, <span class="number">16</span>, <span class="number">16</span>, RED);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    tft.drawBitmap(<span class="number">140</span>, <span class="number">4</span>, icon_wifi, <span class="number">16</span>, <span class="number">16</span>, GREEN);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  tft.drawLine(<span class="number">0</span>, <span class="number">24</span>, <span class="number">160</span>, <span class="number">24</span>, WHITE);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">0</span>, <span class="number">32</span>, icon_temp, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">26</span>, <span class="number">47</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(temp);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">72</span>,<span class="number">50</span>); tft.print(<span class="string">&quot;C&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">80</span>, <span class="number">32</span>, icon_SQM, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">106</span>, <span class="number">46</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(SQM);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">108</span>,<span class="number">49</span>); tft.print(<span class="string">&quot;Mag/as2&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">0</span>, <span class="number">66</span>, icon_humidity, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">26</span>, <span class="number">84</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(humidity);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">72</span>,<span class="number">88</span>); tft.print(<span class="string">&quot;%&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">80</span>, <span class="number">66</span>, icon_pressure, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">105</span>, <span class="number">84</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(pressure, <span class="number">1</span>);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">140</span>,<span class="number">88</span>); tft.print(<span class="string">&quot;hPa&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">0</span>, <span class="number">100</span>, icon_dew, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">26</span>, <span class="number">117</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(dewpoint);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">72</span>,<span class="number">120</span>); tft.print(<span class="string">&quot;C&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">80</span>, <span class="number">100</span>, icon_altitude, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">105</span>, <span class="number">117</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(altitude);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">152</span>,<span class="number">119</span>); tft.print(<span class="string">&quot;m&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">connect_wifi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;===========WiFi Connection===========&quot;</span>);</span><br><span class="line">  WiFi.mode(WIFI_STA); <span class="comment">// set to station mode</span></span><br><span class="line">  WiFi.disconnect(); <span class="comment">// init</span></span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;WiFi setup done&quot;</span>);</span><br><span class="line"></span><br><span class="line">  WiFi.begin(WLAN_SSID, WLAN_PASSWD);</span><br><span class="line">  delay(WLAN_TIMEOUT_MS); <span class="comment">// important, don&#x27;t make the delay too short</span></span><br><span class="line">  <span class="keyword">if</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi connection failed!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi connection successed!&quot;</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;IP: &quot;</span>);</span><br><span class="line">    Serial.println(WiFi.localIP());</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//publish the data to Adafruit IO</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">send_data</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure, <span class="keyword">float</span> altitude, <span class="keyword">float</span> dewpoint, <span class="keyword">float</span> SQM)</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;======Send data to Adafruit IO======&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (AIO_temp.publish(temp)) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Sent data!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Failed to send data!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  AIO_humidity.publish(humidity);</span><br><span class="line">  AIO_pressure.publish(pressure);</span><br><span class="line">  AIO_altitude.publish(altitude);</span><br><span class="line">  AIO_SQM.publish(SQM);</span><br><span class="line">  AIO_dewpoint.publish(dewpoint);</span><br><span class="line">  Serial.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// connect to Adafruit IO</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">connect_adafruit</span><span class="params">()</span> </span>&#123; </span><br><span class="line">  Serial.println(<span class="string">&quot;======Connecting to Adafruit IO======&quot;</span>);</span><br><span class="line">  <span class="keyword">int8_t</span> ret;</span><br><span class="line">  <span class="keyword">if</span> ((ret = mqtt.connect()) != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (ret) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>: Serial.println(F(<span class="string">&quot;[ERROR] Wrong protocol&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>: Serial.println(F(<span class="string">&quot;[ERROR] ID rejected&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>: Serial.println(F(<span class="string">&quot;[ERROR] Server unavailable&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>: Serial.println(F(<span class="string">&quot;[ERROR] Bad username/password&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>: Serial.println(F(<span class="string">&quot;[ERROR] Not authorized&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">6</span>: Serial.println(F(<span class="string">&quot;[ERROR] Failed to subscribe&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>: Serial.println(F(<span class="string">&quot;[ERROR] Connection failed&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我們從程式碼一一來看，這裡新增了WiFi聯網功能以及Adafruit IO的資料推送功能<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_MQTT.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_MQTT_Client.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Wi-Fi parameters</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WLAN_SSID <span class="meta-string">&quot;Wooster&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WLAN_PASSWD <span class="meta-string">&quot;123456789&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WLAN_TIMEOUT_MS 15000</span></span><br><span class="line"><span class="comment">// Adafruit IO</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_SERVER <span class="meta-string">&quot;io.adafruit.com&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_SERVERPORT 1883</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_USERNAME <span class="meta-string">&quot;jamiechang917&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_KEY <span class="meta-string">&quot;填入你的金鑰(key)&quot;</span></span></span><br></pre></td></tr></table></figure><br><code>WLAN_SSID</code>是你的WiFi名稱，下面則是密碼，需要寫在程式碼裡面。另外Adafruit IO的Server網址及端口也要寫，下面則是Adafruit帳號和金鑰。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCREEN_REFRESH_TIME 10 <span class="comment">// (second) refresh the screen every 10 seconds</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEND_DATA_TIME 15 <span class="comment">// (second) send data to adafruit io every 15 seconds</span></span></span><br></pre></td></tr></table></figure>
<p>這兩行是我自己定義的，我將螢幕刷新時間設定為10秒，而發送資料到Adafruit IO的時間間隔為15秒。要實現這種每隔幾秒做一件事情的功能很簡單，我們先定義兩個計數器</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> refresh_cnt = <span class="number">0</span>, send_cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (refresh_cnt &gt;= SCREEN_REFRESH_TIME) &#123;</span><br><span class="line">    refresh_cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 更新你的螢幕</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (send_cnt &gt;= SEND_DATA_TIME) &#123;</span><br><span class="line">    send_cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 發送資料</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  refresh_cnt += <span class="number">1</span>;</span><br><span class="line">  send_cnt += <span class="number">1</span>;</span><br><span class="line">  delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在<code>loop()</code>迴圈裡，我設定<code>delay(1000)</code>，這樣一來每隔一秒這兩個計數器就會加一，而當他們達到上限時，就會進入相對應的程式碼區塊。舉發送資料的例子，當計數器到15的時候就開始發送資料，而動作結束後這個計數器也會重新歸零。如此反覆循環就能達成每隔15秒發送一次資料的功能。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">WiFiClient client;</span><br><span class="line"><span class="function">Adafruit_MQTT_Client <span class="title">mqtt</span><span class="params">(&amp;client, AIO_SERVER, AIO_SERVERPORT, AIO_USERNAME, AIO_KEY)</span></span>;</span><br><span class="line">Adafruit_MQTT_Publish AIO_temp = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/temperature&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_humidity = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/humidity&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_SQM = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/sqm&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_pressure = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/pressure&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_altitude = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/altitude&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_dewpoint = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/dew-point&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>開頭兩行分別建立WiFi以及MQTT的Client。另外其他的是feed，在Adafruit的dashboard裡，要監測的變量稱為feed，在程式碼裡要建立<code>Adafruit_MQTT_Publish</code>類的變數，格式如上。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">connect_wifi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;===========WiFi Connection===========&quot;</span>);</span><br><span class="line">  WiFi.mode(WIFI_STA); <span class="comment">// set to station mode</span></span><br><span class="line">  WiFi.disconnect(); <span class="comment">// init</span></span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;WiFi setup done&quot;</span>);</span><br><span class="line"></span><br><span class="line">  WiFi.begin(WLAN_SSID, WLAN_PASSWD);</span><br><span class="line">  delay(WLAN_TIMEOUT_MS); <span class="comment">// important, don&#x27;t make the delay too short</span></span><br><span class="line">  <span class="keyword">if</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi connection failed!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi connection successed!&quot;</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;IP: &quot;</span>);</span><br><span class="line">    Serial.println(WiFi.localIP());</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我將連結WiFi的基本步驟寫成一個函式，首先<code>WiFi.mode()</code>是設定WiFi晶片的模式，可以是STA或是AP模式，如果是要發送資料到網路上，需要使用STA模式。連接WiFi的話使用<code>WiFi.begin(WLAN_SSID, WLAN_PASSWD)</code>，分別填入SSID和密碼，<strong>要注意的是下面一行的<code>delay(WLAN_TIMEOUT_MS)</code>，這裡我設定15秒，千萬不要設定太短，否則NodeMCU-32S將會來不及連接WiFi，導致永遠連不上的狀況</strong>。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// connect to Adafruit IO</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">connect_adafruit</span><span class="params">()</span> </span>&#123; </span><br><span class="line">  Serial.println(<span class="string">&quot;======Connecting to Adafruit IO======&quot;</span>);</span><br><span class="line">  <span class="keyword">int8_t</span> ret;</span><br><span class="line">  <span class="keyword">if</span> ((ret = mqtt.connect()) != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (ret) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>: Serial.println(F(<span class="string">&quot;[ERROR] Wrong protocol&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>: Serial.println(F(<span class="string">&quot;[ERROR] ID rejected&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>: Serial.println(F(<span class="string">&quot;[ERROR] Server unavailable&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>: Serial.println(F(<span class="string">&quot;[ERROR] Bad username/password&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>: Serial.println(F(<span class="string">&quot;[ERROR] Not authorized&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">6</span>: Serial.println(F(<span class="string">&quot;[ERROR] Failed to subscribe&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>: Serial.println(F(<span class="string">&quot;[ERROR] Connection failed&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Adafruit IO connection successed!&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>這部分是連接Adafruit IO的步驟，再連接完WiFi後使用。方式很簡單，調用<code>mqtt.connect()</code>就可以了，這個函式會返回一個整數，0代表成功，其他數字代表不同的連接狀況，如果發生狀況，我將狀況印在Serial Monitor上，方便debug。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//publish the data to Adafruit IO</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">send_data</span><span class="params">(<span class="keyword">float</span> temp, <span class="keyword">float</span> humidity, <span class="keyword">float</span> pressure, <span class="keyword">float</span> altitude, <span class="keyword">float</span> dewpoint, <span class="keyword">float</span> SQM)</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;======Send data to Adafruit IO======&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (AIO_temp.publish(temp)) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Sent data!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Failed to send data!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  AIO_humidity.publish(humidity);</span><br><span class="line">  AIO_pressure.publish(pressure);</span><br><span class="line">  AIO_altitude.publish(altitude);</span><br><span class="line">  AIO_SQM.publish(SQM);</span><br><span class="line">  AIO_dewpoint.publish(dewpoint);</span><br><span class="line">  Serial.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>當連結到Adafruit IO後，將先前建立的<code>Adafruit_MQTT_Publish</code>類型變數後方加上<code>.publish</code>就可以發布資料到該feed。</p>
<p><img src="https://i.imgur.com/uDNvsar.jpg" alt=""></p>
<h2 id="成品與心得"><a href="#成品與心得" class="headerlink" title="成品與心得"></a>成品與心得</h2><p>最近因疫情嚴峻，想買個零件都要等超過一星期，而且一開始挑選的一些零件甚至沒貨，只好另尋替代品，不過經過一番調整，總算做出一個土炮攜帶型天氣站了，我暫時用樂高拼了一個殼給它，未來再用3D列印給它更好的家。</p>
<p><img src="https://i.imgur.com/sZAGi9Z.jpg" alt=""></p>
<p>初步校正後，我關燈比較看看SQM和天氣站的數值，看起來是相當接近阿，我個人很滿意，而且未來還能去山上進行更精細的調教。</p>
<p><img src="https://i.imgur.com/XuOgEAV.jpg" alt=""></p>
<p>最困難的地方我覺得還是螢幕版面的設計，要自己找icon還要在有限的空間內塞入這麼多東西，花了不少時間才弄好，但是做完後實在是賞心悅目，一眼就能看到所有資訊，打開WiFi還能上傳資料，以後在山上天冷了也能躲在車裡看，不用坐在外頭吹冷風 :)。</p>
<p>最後附上程式碼</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_Sensor.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_BME280.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_TSL2591.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_GFX.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_ST7735.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Fonts/FreeSans9pt7b.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_MQTT.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Adafruit_MQTT_Client.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Wi-Fi parameters</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WLAN_SSID <span class="meta-string">&quot;Wooster&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WLAN_PASSWD <span class="meta-string">&quot;123456789&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WLAN_TIMEOUT_MS 15000</span></span><br><span class="line"><span class="comment">// Adafruit IO</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_SERVER <span class="meta-string">&quot;io.adafruit.com&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_SERVERPORT 1883</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_USERNAME <span class="meta-string">&quot;jamiechang917&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AIO_KEY <span class="meta-string">&quot;AIO金鑰&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEALEVELPRESSURE_HPA 1003.0 <span class="comment">// 1 atm = 1013.25 hPa</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GAIN TSL2591_GAIN_HIGH <span class="comment">// (LOW, MID, HIGH)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INTEGRATIONTIME TSL2591_INTEGRATIONTIME_500MS <span class="comment">// (100MS,200MS,300MS,400MS,500MS,600MS)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EFFECTIVE_SOLID_ANGLE 1.4 <span class="comment">// solid angle in steradians for SQM</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CALIBRATION_COEFF_A 1.0 <span class="comment">// SQM = 12.5836 - COEFF_A*log(lux/solid_angle)/(-0.4) + COEFF_B</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CALIBRATION_COEFF_B 0.0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCREEN_REFRESH_TIME 10 <span class="comment">// (second) refresh the screen every 10 seconds</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SEND_DATA_TIME 15 <span class="comment">// (second) send data to adafruit io every 15 seconds</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RECONNECTION_TIME 60 <span class="comment">// (second) reconnect wifi every 60 seconds if disconnected</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LOOP_DELAY_TIME 0.1 <span class="comment">// (second) delay time in the loop() function</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_CS   5 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_DC   17</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_RST  0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TFT_Vcc  16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Button   4</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLACK   0x0000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLUE    0x001F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RED     0xF800</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GREEN   0x07E0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CYAN    0x07FF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAGENTA 0xF81F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YELLOW  0xFFE0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WHITE   0xFFFF</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GREY     0xD6BA</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Setup the WiFi and MQTT client</span></span><br><span class="line">WiFiClient client;</span><br><span class="line"><span class="function">Adafruit_MQTT_Client <span class="title">mqtt</span><span class="params">(&amp;client, AIO_SERVER, AIO_SERVERPORT, AIO_USERNAME, AIO_KEY)</span></span>;</span><br><span class="line">Adafruit_MQTT_Publish AIO_temp = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/temperature&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_humidity = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/humidity&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_SQM = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/sqm&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_pressure = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/pressure&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_altitude = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/altitude&quot;</span>);</span><br><span class="line">Adafruit_MQTT_Publish AIO_dewpoint = Adafruit_MQTT_Publish(&amp;mqtt, AIO_USERNAME <span class="string">&quot;/feeds/dew-point&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// setup the sensors</span></span><br><span class="line">Adafruit_BME280 bme; <span class="comment">// I2C</span></span><br><span class="line">Adafruit_TSL2591 tsl = Adafruit_TSL2591(<span class="number">2591</span>);</span><br><span class="line">Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> temp, humidity, pressure, altitude, luminosity, dewpoint, SQM;</span><br><span class="line"><span class="keyword">int</span> refresh_cnt = <span class="number">0</span>, send_cnt = <span class="number">0</span>, reconnect_cnt = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">int</span> display_state = <span class="number">1</span>, button_state = <span class="number">1</span>, old_button_state = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// icon&#x27;s bitmap</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_temp[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_humidity[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_pressure[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_SQM[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_dew[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_altitude[];</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">uint8_t</span> icon_wifi[];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line"></span><br><span class="line">  pinMode(TFT_Vcc, OUTPUT);</span><br><span class="line">  digitalWrite(TFT_Vcc, HIGH);</span><br><span class="line">  pinMode(Button, INPUT);</span><br><span class="line">  digitalWrite(LED_BUILTIN, LOW);</span><br><span class="line"></span><br><span class="line">  init_bme280();</span><br><span class="line">  init_tsl2591();</span><br><span class="line">  init_tft();</span><br><span class="line">  measure();</span><br><span class="line">  update_tft();</span><br><span class="line"></span><br><span class="line">  connect_wifi();</span><br><span class="line">  connect_adafruit();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  old_button_state = button_state;</span><br><span class="line">  button_state = digitalRead(Button);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (button_state == <span class="number">0</span> &amp;&amp; old_button_state == <span class="number">1</span>) &#123; <span class="comment">// on/off the display</span></span><br><span class="line">      display_state = <span class="number">1</span> - display_state;</span><br><span class="line">      digitalWrite(TFT_Vcc, display_state);</span><br><span class="line">      <span class="keyword">if</span> (display_state == <span class="number">1</span>) &#123; <span class="comment">// turn on the screen</span></span><br><span class="line">        init_tft();</span><br><span class="line">        update_tft();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (refresh_cnt &gt;= SCREEN_REFRESH_TIME/LOOP_DELAY_TIME) &#123;</span><br><span class="line">    refresh_cnt = <span class="number">0</span>;</span><br><span class="line">    measure();</span><br><span class="line">    update_tft();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (send_cnt &gt;= SEND_DATA_TIME/LOOP_DELAY_TIME) &#123;</span><br><span class="line">    send_cnt = <span class="number">0</span>;</span><br><span class="line">    measure();</span><br><span class="line">    <span class="comment">// send data to adafruit io</span></span><br><span class="line">    send_data();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (reconnect_cnt &gt;= RECONNECTION_TIME/LOOP_DELAY_TIME) &#123;</span><br><span class="line">    reconnect_cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!mqtt.connected()) &#123; <span class="comment">// reconnect when disconnecting</span></span><br><span class="line">      Serial.println(<span class="string">&quot;Reconnecting...&quot;</span>);</span><br><span class="line">      connect_wifi();</span><br><span class="line">      connect_adafruit();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  refresh_cnt += <span class="number">1</span>;</span><br><span class="line">  send_cnt += <span class="number">1</span>;</span><br><span class="line">  reconnect_cnt += <span class="number">1</span>;</span><br><span class="line">  delay(LOOP_DELAY_TIME*<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_bme280</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  bme.begin(<span class="number">0x76</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_tsl2591</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tsl.begin(<span class="number">0x29</span>);</span><br><span class="line">  tsl.setGain(GAIN);</span><br><span class="line">  tsl.setTiming(INTEGRATIONTIME);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_tft</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tft.initR(INITR_BLACKTAB); <span class="comment">// for 1.8&quot; ST7735 TFT display</span></span><br><span class="line">  tft.setRotation(<span class="number">1</span>);  <span class="comment">//screen rotation</span></span><br><span class="line">  tft.setTextWrap(<span class="literal">false</span>);</span><br><span class="line">  tft.fillScreen(ST77XX_BLACK);  <span class="comment">//filled with black color</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_temperature</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readTemperature();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_humidity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readHumidity();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_altitude</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> bme.readAltitude(SEALEVELPRESSURE_HPA);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_pressure</span><span class="params">()</span> </span>&#123; <span class="comment">// return hPa</span></span><br><span class="line">  <span class="keyword">return</span> bme.readPressure()/<span class="number">100.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">get_luminosity</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">uint32_t</span> lum = tsl.getFullLuminosity();</span><br><span class="line">  <span class="keyword">uint16_t</span> ir,full;</span><br><span class="line">  ir = lum &gt;&gt; <span class="number">16</span>;</span><br><span class="line">  full = lum &amp; <span class="number">0xFFFF</span>;</span><br><span class="line">  <span class="keyword">return</span> tsl.calculateLux(full, ir); <span class="comment">// return -1 if the value blows up</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">measure</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  temp = get_temperature();</span><br><span class="line">  humidity = get_humidity();</span><br><span class="line">  pressure = get_pressure();</span><br><span class="line">  altitude = get_altitude();</span><br><span class="line">  luminosity = get_luminosity();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// calculate dew point</span></span><br><span class="line">  dewpoint = temp - ((<span class="number">100</span>-humidity)/<span class="number">5.</span>);</span><br><span class="line">  <span class="comment">// calculate SQM</span></span><br><span class="line">  <span class="comment">// SQM = log10f((luminosity/EFFECTIVE_SOLID_ANGLE)/108000)/(-0.4);</span></span><br><span class="line">  SQM = <span class="number">12.5836</span> + CALIBRATION_COEFF_A*log10f(luminosity/EFFECTIVE_SOLID_ANGLE)/(<span class="number">-0.4</span>) + CALIBRATION_COEFF_B;</span><br><span class="line"></span><br><span class="line">  Serial.println(<span class="string">&quot;=============Measurement=============&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Temperature:\t&quot;</span>); Serial.print(temp); Serial.println(<span class="string">&quot; C&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;SQM Value:\t&quot;</span>); Serial.print(SQM); Serial.println(<span class="string">&quot; Mag/as^2&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Humidity:\t&quot;</span>); Serial.print(humidity); Serial.println(<span class="string">&quot; %&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Pressure:\t&quot;</span>); Serial.print(pressure); Serial.println(<span class="string">&quot; hPa&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Altitude:\t&quot;</span>); Serial.print(altitude); Serial.println(<span class="string">&quot; m&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Dew Point:\t&quot;</span>); Serial.print(dewpoint); Serial.println(<span class="string">&quot; C&quot;</span>);</span><br><span class="line">  Serial.print(<span class="string">&quot;Illuminance:\t&quot;</span>); Serial.print(luminosity,<span class="number">6</span>); Serial.println(<span class="string">&quot; lux&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_tft</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tft.fillScreen(ST77XX_BLACK);</span><br><span class="line">  tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.setCursor(<span class="number">4</span>, <span class="number">18</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(<span class="string">&quot;Weather Station&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    tft.drawBitmap(<span class="number">140</span>, <span class="number">4</span>, icon_wifi, <span class="number">16</span>, <span class="number">16</span>, RED);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    tft.drawBitmap(<span class="number">140</span>, <span class="number">4</span>, icon_wifi, <span class="number">16</span>, <span class="number">16</span>, GREEN);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  tft.drawLine(<span class="number">0</span>, <span class="number">24</span>, <span class="number">160</span>, <span class="number">24</span>, WHITE);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">0</span>, <span class="number">32</span>, icon_temp, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">26</span>, <span class="number">47</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(temp);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">72</span>,<span class="number">50</span>); tft.print(<span class="string">&quot;C&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">80</span>, <span class="number">32</span>, icon_SQM, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">106</span>, <span class="number">46</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(SQM);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">108</span>,<span class="number">49</span>); tft.print(<span class="string">&quot;Mag/as2&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">0</span>, <span class="number">66</span>, icon_humidity, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">26</span>, <span class="number">84</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(humidity);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">72</span>,<span class="number">88</span>); tft.print(<span class="string">&quot;%&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">80</span>, <span class="number">66</span>, icon_pressure, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">105</span>, <span class="number">84</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(pressure, <span class="number">1</span>);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">140</span>,<span class="number">88</span>); tft.print(<span class="string">&quot;hPa&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">0</span>, <span class="number">100</span>, icon_dew, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">26</span>, <span class="number">117</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(dewpoint);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">72</span>,<span class="number">120</span>); tft.print(<span class="string">&quot;C&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line"></span><br><span class="line">  tft.drawBitmap(<span class="number">80</span>, <span class="number">100</span>, icon_altitude, <span class="number">24</span>, <span class="number">24</span>, WHITE);</span><br><span class="line">  tft.setCursor(<span class="number">105</span>, <span class="number">117</span>);</span><br><span class="line">  tft.setTextColor(ST77XX_WHITE);</span><br><span class="line">  tft.print(altitude);</span><br><span class="line">  tft.setFont(<span class="literal">NULL</span>); tft.setCursor(<span class="number">152</span>,<span class="number">119</span>); tft.print(<span class="string">&quot;m&quot;</span>); tft.setFont(&amp;FreeSans9pt7b);</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">connect_wifi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;===========WiFi Connection===========&quot;</span>);</span><br><span class="line">  WiFi.mode(WIFI_STA); <span class="comment">// set to station mode</span></span><br><span class="line">  WiFi.disconnect(); <span class="comment">// init</span></span><br><span class="line">  delay(<span class="number">100</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;WiFi setup done&quot;</span>);</span><br><span class="line"></span><br><span class="line">  WiFi.begin(WLAN_SSID, WLAN_PASSWD);</span><br><span class="line">  delay(WLAN_TIMEOUT_MS); <span class="comment">// important, don&#x27;t make the delay too short</span></span><br><span class="line">  <span class="keyword">if</span> (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi connection failed!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;WiFi connection successed!&quot;</span>);</span><br><span class="line">    Serial.print(<span class="string">&quot;IP: &quot;</span>);</span><br><span class="line">    Serial.println(WiFi.localIP());</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//publish the data to Adafruit IO</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">send_data</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.println(<span class="string">&quot;======Send data to Adafruit IO======&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (AIO_temp.publish(temp)) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Sent data!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Failed to send data!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  AIO_humidity.publish(humidity);</span><br><span class="line">  AIO_pressure.publish(pressure);</span><br><span class="line">  AIO_altitude.publish(altitude);</span><br><span class="line">  AIO_SQM.publish(SQM);</span><br><span class="line">  AIO_dewpoint.publish(dewpoint);</span><br><span class="line">  Serial.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// connect to Adafruit IO</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">connect_adafruit</span><span class="params">()</span> </span>&#123; </span><br><span class="line">  Serial.println(<span class="string">&quot;======Connecting to Adafruit IO======&quot;</span>);</span><br><span class="line">  <span class="keyword">int8_t</span> ret;</span><br><span class="line">  <span class="keyword">if</span> ((ret = mqtt.connect()) != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (ret) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>: Serial.println(F(<span class="string">&quot;[ERROR] Wrong protocol&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>: Serial.println(F(<span class="string">&quot;[ERROR] ID rejected&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>: Serial.println(F(<span class="string">&quot;[ERROR] Server unavailable&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>: Serial.println(F(<span class="string">&quot;[ERROR] Bad username/password&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>: Serial.println(F(<span class="string">&quot;[ERROR] Not authorized&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">6</span>: Serial.println(F(<span class="string">&quot;[ERROR] Failed to subscribe&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>: Serial.println(F(<span class="string">&quot;[ERROR] Connection failed&quot;</span>)); <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Adafruit IO connection successed!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  Serial.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="更多功能"><a href="#更多功能" class="headerlink" title="更多功能"></a>更多功能</h2><ul>
<li>休眠與關機</li>
<li>雲量偵測器</li>
<li>corlysis (<a href="https://www.hackster.io/michal-kren/simple-weather-station-with-amazing-web-monitoring-2b3044">https://www.hackster.io/michal-kren/simple-weather-station-with-amazing-web-monitoring-2b3044</a>)</li>
</ul>
]]></content>
      <categories>
        <category>maker</category>
      </categories>
      <tags>
        <tag>astrophotography</tag>
        <tag>maker</tag>
      </tags>
  </entry>
</search>
